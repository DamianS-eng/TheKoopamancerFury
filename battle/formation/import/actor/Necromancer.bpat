#new:Actor $Actor {
% stats
[Index]        D4b
[Level]         0`b
[MaxHP]        99`b
[Coins]         0`b
%[Flags]       00208200
[Flags]       00000200
[StatusTable] $StatusTable_Necromancer
% ai
[PartsCount]    6`s
[PartsTable]  $PartsTable_Necromancer
[Script]      $Script_Init_Necromancer
% move effectiveness
[Escape]        0`b
[Item]          0`b
[AirLift]       0`b
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b
[PowerBounce]   0`b
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     3`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy
}


#new:IdleAnimations $IdleAnimations_Necromancer_Normal {
.Status:Normal    00EA0001
.Status:Stone     00EA0000
.Status:Sleep     00EA0016
.Status:Poison    00EA0001
.Status:Stop      00EA0000
.Status:Static    00EA0001
.Status:Paralyze  00EA0000
.Status:Dizzy     00EA0019
.Status:Fear      00EA0001
.Status:End
}

#new:IdleAnimations $IdleAnimations_Necromancer_Tired {
.Status:Normal    00EA002E
.Status:Stone     00EA0000
.Status:Sleep     00EA0016
.Status:Poison    00EA0001
.Status:Stop      00EA0000
.Status:Static    00EA0001
.Status:Paralyze  00EA0000
.Status:Dizzy     00EA0019
.Status:Fear      00EA0001
.Status:End
}

#new:IdleAnimations $IdleAnimations_Necromancer_Spirit {
.Status:Normal    00EA003F
.Status:Stone     00EA003D
.Status:Sleep     00EA003D
.Status:Poison    00EA003D
.Status:Stop      00EA003D
.Status:Static    00EA003D
.Status:Paralyze  00EA003D
.Status:Dizzy     00EA003D
.Status:Fear      00EA003D
.Status:End
}

#new:IdleAnimations $IdleAnimations_Spirit {
.Status:Normal    00EA0014
.Status:End
}

#new:IdleAnimations $IdleAnimations_Skull {
.Status:Normal    00EA0028
.Status:End
}

#new:IdleAnimations $IdleAnimations_Bone {
.Status:Normal    00EA0029
.Status:End
}

#new:DefenseTable $DefenseTable_Necromancer {
.Element:Normal 1`
.Element:Fire -1`
.Element:Blast -1`
.Element:Shock  100`
.Element:Water  100`
.Element:Ice  100`
.Element:End
}

#new:DefenseTable $DefenseTable_Necromancer_Spirit {
.Element:Normal 0`
.Element:Shock  100`
.Element:Water  100`
.Element:Ice  100`
.Element:End
}

#new:StatusTable $StatusTable_Necromancer {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:Function $Function_802181A0_14 {
  0:  ADDIU     SP, SP, FFD8
  4:  SW        S1, 14 (SP)
  8:  COPY      S1, A0
  C:  SW        RA, 20 (SP)
  10:  SW        S3, 1C (SP)
  14:  SW        S2, 18 (SP)
  18:  SW        S0, 10 (SP)
  1C:  LW        S0, C (S1)
  20:  LW        A1, 0 (S0)
  24:  JAL       ~Func:get_variable
  28:  ADDIU     S0, S0, 4
  2C:  LW        A1, 0 (S0)
  30:  ADDIU     S0, S0, 4
  34:  COPY      A0, S1
  38:  JAL       ~Func:get_variable
  3C:  COPY      S3, V0
  40:  LW        A1, 0 (S0)
  44:  ADDIU     S0, S0, 4
  48:  COPY      A0, S1
  4C:  JAL       ~Func:get_variable
  50:  COPY      S2, V0
  54:  COPY      A0, S1
  58:  LW        A1, 0 (S0)
  5C:  JAL       ~Func:get_variable
  60:  COPY      S0, V0
  64:  MTC1      S3, F12
  68:  NOP
  6C:  CVT.S.W   F12, F12
  70:  MTC1      S2, F14
  74:  NOP
  78:  CVT.S.W   F14, F14
  7C:  MTC1      S0, F0
  80:  NOP
  84:  CVT.S.W   F0, F0
  88:  MFC1      A2, F0
  8C:  JAL       802D7460
  90:  COPY      A3, V0
  94:  LW        RA, 20 (SP)
  98:  LW        S3, 1C (SP)
  9C:  LW        S2, 18 (SP)
  A0:  LW        S1, 14 (SP)
  A4:  LW        S0, 10 (SP)
  A8:  LI        V0, 2
  AC:  JR        RA
  B0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218254_14 {
  0:  ADDIU     SP, SP, FFD8
  4:  SW        S1, 14 (SP)
  8:  COPY      S1, A0
  C:  SW        RA, 20 (SP)
  10:  SW        S3, 1C (SP)
  14:  SW        S2, 18 (SP)
  18:  SW        S0, 10 (SP)
  1C:  LW        S0, C (S1)
  20:  LW        A1, 0 (S0)
  24:  JAL       ~Func:get_variable
  28:  ADDIU     S0, S0, 4
  2C:  LW        A1, 0 (S0)
  30:  ADDIU     S0, S0, 4
  34:  COPY      A0, S1
  38:  JAL       ~Func:get_variable
  3C:  COPY      S3, V0
  40:  LW        A1, 0 (S0)
  44:  ADDIU     S0, S0, 4
  48:  COPY      A0, S1
  4C:  JAL       ~Func:get_variable
  50:  COPY      S2, V0
  54:  COPY      A0, S1
  58:  LW        A1, 0 (S0)
  5C:  JAL       ~Func:get_variable
  60:  COPY      S0, V0
  64:  MTC1      S3, F12
  68:  NOP
  6C:  CVT.S.W   F12, F12
  70:  MTC1      S2, F14
  74:  NOP
  78:  CVT.S.W   F14, F14
  7C:  MTC1      S0, F0
  80:  NOP
  84:  CVT.S.W   F0, F0
  88:  MFC1      A2, F0
  8C:  JAL       802D74C0
  90:  COPY      A3, V0
  94:  LW        RA, 20 (SP)
  98:  LW        S3, 1C (SP)
  9C:  LW        S2, 18 (SP)
  A0:  LW        S1, 14 (SP)
  A4:  LW        S0, 10 (SP)
  A8:  LI        V0, 2
  AC:  JR        RA
  B0:  ADDIU     SP, SP, 28
}

#new:Function $Function_Change_BGM {
  0:  ADDIU     SP, SP, FFE8
  4:  LI        A0, 8
  8:  SW        RA, 10 (SP)
  C:  JAL       ~Func:bgm_set_battle_song
  10:  CLEAR     A1
  14:  JAL       ~Func:bgm_push_battle_song
  18:  NOP
  1C:  LW        RA, 10 (SP)
  20:  LI        V0, 2
  24:  JR        RA
  28:  ADDIU     SP, SP, 18
}

#new:PartsTable $PartsTable_Necromancer {
  00020000 01000000 EC3C00FF $IdleAnimations_Necromancer_Normal $DefenseTable_Necromancer 00000000 00000000 00000000 00000000
  00800001 02001F00 FE0800FF $IdleAnimations_Necromancer_Normal $DefenseTable_Necromancer 00000000 00000000 00F20000 00000000
  00120001 03000000 000000FF $IdleAnimations_Spirit $DefenseTable_Necromancer 00000000 00000000 00000000 00000000
  00120001 04000000 000000FF $IdleAnimations_Skull $DefenseTable_Necromancer 00000000 00000000 00000000 00000000
  00120001 05000000 000000FF $IdleAnimations_Bone $DefenseTable_Necromancer 00000000 00000000 00000000 00000000
  00120001 06000000 000000FF $IdleAnimations_Bone $DefenseTable_Necromancer 00000000 00000000 00000000 00000000
}

% Necromancer Actor Variables
#define .AVar:KingBooPhase 0`
#define .AVar:CurrentlyRotating 1`
#define .AVar:SkullBonesID 2`
#define .AVar:TurnsUntilDryBonesSummon 6`
#define .AVar:AmountOfDryBonesAlive 7`
#define .AVar:FirstTimeSummoningDryBones 8`
#define .AVar:HealAmount 9`
#define .AVar:FirstTimeConsumingDryBones 10`

#new:Script $Script_Init_Necromancer {
  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_Necromancer )
  Call  BindIdle      ( .Actor:Self $Script_Idle_Necromancer )
  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_Necromancer )
  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_Necromancer )
  Call  SetActorVar   ( .Actor:Self 0` 99` ) %Previous Attack: 0 = Regular Scythe Swing. 1 = Life Steal. 2 = Bone Attack. 3 = Dry Bones Summon. 4 = Lightning
  Call  SetActorVar   ( .Actor:Self 1` 0` ) %Currently Rotating.
  Call  SetActorVar   ( .Actor:Self 2` 0` ) %SkullBonesID.
  Call  SetActorVar   ( .Actor:Self 3` 0` ) %SkullBone #1 Type. 0 = Bone, 1 = Skull, 2 = Ribs.
  Call  SetActorVar   ( .Actor:Self 4` 0` ) %SkullBone #2 Type. 0 = Bone, 1 = Skull, 2 = Ribs.
  Call  SetActorVar   ( .Actor:Self 5` 0` ) %SkullBone #3 Type. 0 = Bone, 1 = Skull, 2 = Ribs.
  Call  SetActorVar   ( .Actor:Self 6` 0` ) %SkullBone #4 Type. 0 = Bone, 1 = Skull, 2 = Ribs.
  Call  SetActorVar   ( .Actor:Self 7` 0` ) %Amount of Dry Bones alive.
  Call  SetActorVar   ( .Actor:Self 8` 0` ) %First time summoning Dry Bones 1 = SummedAlreadyBefore.
  Call  SetActorVar   ( .Actor:Self 9` 0` ) %Amount to Heal
  Call  SetActorVar   ( .Actor:Self 10` 0` ) %First time consuming Dry Bones
  Call  SetActorVar   ( .Actor:Self 11` 0` ) %Many Spirit Index
  Call  SetActorVar   ( .Actor:Self 12` 0` ) %Many Spirit Count
  Call  SetActorVar   ( .Actor:Self 13` 1` ) %Phase: 1 = Phase 1. 2 = Phase 2, 3 = Phase 3.
  Call  SetActorVar   ( .Actor:Self 14` 0` ) %Suck in spirit after swing.
  Call  SetActorVar   ( .Actor:Self 15` 0` ) %Turns until Dry Bones Summon can be performed.
  Call  SetActorVar   ( .Actor:Self 16` 0` ) %Dry Blubba Actor ID
  Call  SetActorVar   ( .Actor:Self 17` 0` ) %Intro Cutscene
  Call  SetPartAlpha  ( .Actor:Self 00000001 0` )
  Return
  End
}

#new:Script $Script_NextTurn_Necromancer {
  /%
  Call  GetActorVar   ( .Actor:Self 13` *Var0 ) % Phase: 1 = Phase 1. 2 = Phase 2, 3 = Phase 3.
  Switch *Var0
    Case == 1`
      Call  GetActorHP    ( .Actor:Self *VarA )
      If *VarA < 70`
        ExecWait $Script_Summon_DryTubbaBlubba
      EndIf
    Default
  EndSwitch
  %/
  Call GetActorVar (.Actor:Self 17` *Var0)
  If *Var0 == 0`
    Call  SetActorVar   ( .Actor:Self 17` 1` ) % Intro Cutscene
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self .False )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseBattleCamPreset    ( 0000000D )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Wait 10`
    Set *Var4 0`
    Loop 30`
        Add *Var4 16`
        Call  SetPartAlpha  ( .Actor:Self 00000001 *Var4 )
        Wait 1`
    EndLoop
    Wait 4`
    Call  ActorSpeak        ( 002F0011 .Actor:Self 00000001 00EA0003 00EA0001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Call  EnableIdleScript  ( .Actor:Self .True )
  EndIf
  /%
  SetConst  *Var[0]  00000001
  SetConst  *Var[1]  00EA0018
  ExecWait  DoDeath
  %/
  Return
  End
}

#new:Script $Script_Idle_Necromancer {
  Label StartofIdleScript
  Call  GetActorVar   ( .Actor:Self 13` *Var0 ) %Phase: 1 = Phase 1. 2 = Phase 2, 3 = Phase 3.
  Switch *Var0
    CaseOR == 1`
    CaseOR == 2`
      Call  GetActorHP    ( .Actor:Self *VarA )
      If *VarA < 26`
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_Necromancer_Tired )
      Else
        Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_Necromancer_Normal )
      EndIf
    EndCaseGroup
  EndSwitch
  Wait 1`
  Goto StartofIdleScript
  Return
  End
}

#new:Script $Script_HandleEvent_Necromancer_Spirit {
  Call  UseIdleAnimation  ( .Actor:Self .False )
  Call  EnableIdleScript  ( .Actor:Self .False )
  Call  GetLastEvent      ( .Actor:Self *Var[0] )
  Switch  *Var[0]
    CaseOR  ==  .Event:HitCombo % 9
   	CaseOR  ==  .Event:Hit % A
   		SetConst  *Var[0]  00000001
   		SetConst  *Var[1]  00EA0041
   		ExecWait  DoNormalHit
   	EndCaseGroup
   	Case  ==  .Event:BurnHit % E
   		SetConst  *Var[0]  00000001
   		SetConst  *Var[1]  00EA0047
   		SetConst  *Var[2]  FFFFFFFF
   		ExecWait  DoBurnHit
   	Case  ==  .Event:BurnDeath % 24
   		SetConst  *Var[0]  00000001
   		SetConst  *Var[1]  00EA0047
  		SetConst  *Var[2]  FFFFFFFF
  		ExecWait  DoBurnHit
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0047
  		% ExecWait  DoDeath
  		Return
  	CaseOR  ==  00000017 % 17
  	CaseOR  ==  .Event:Immune % 19
  	CaseOR  ==  .Event:AirLiftFailed % 1F
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0041
  		ExecWait  DoImmune
  	EndCaseGroup
  	Case  ==  .Event:Death % 20
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0041
  		ExecWait  DoNormalHit
  		Wait  10`
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0041
  		% ExecWait  DoDeath
  		Return
  	Case  ==  .Event:RecoverStatus % 31
   		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0041
  		ExecWait  DoRecover
  	Case  ==  .Event:BeginAirLift % 3A
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0041
   		ExecWait  DoAirLift
  	Case  ==  .Event:BlowAway % 16
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0041
  		ExecWait  DoBlowAway
  		Return
  	Default
  EndSwitch
  Call  EnableIdleScript  ( .Actor:Self .True )
  Call  UseIdleAnimation  ( .Actor:Self .True )
  Return
  End
}

#new:Script $Script_HandleEvent_Necromancer {
  Call  UseIdleAnimation  ( .Actor:Self .False )
  Call  EnableIdleScript  ( .Actor:Self .False )
  Call  GetLastEvent      ( .Actor:Self *Var[0] )
  Call  GetActorVar   ( .Actor:Self 13` *VarA ) % Phase: 1 = Phase 1. 2 = Phase 2, 3 = Phase 3.
  Switch  *Var[0]
  	CaseOR  ==  .Event:HitCombo % 9
  	CaseOR  ==  .Event:Hit % A
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0017
  		ExecWait  DoNormalHit
  	EndCaseGroup
  	Case  ==  .Event:BurnHit % E
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA001A
  		SetConst  *Var[2]  FFFFFFFF
  		ExecWait  DoBurnHit
  	Case  ==  .Event:BurnDeath % 24
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA001A
  		SetConst  *Var[2]  FFFFFFFF
  		ExecWait  DoBurnHit
      Goto TransformIntoSpirit
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA001B
  		% ExecWait  DoDeath
  		Return
  	CaseOR  ==  00000017 % 17
  	CaseOR  ==  .Event:Immune % 19
  	CaseOR  ==  .Event:AirLiftFailed % 1F
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0001
  		ExecWait  DoImmune
  	EndCaseGroup
  	Case  ==  .Event:Death % 20
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0018
  		ExecWait  DoNormalHit
  		Wait  10`
      Goto TransformIntoSpirit
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0018
      % ExecWait  DoDeath
  		Return
  	Case  ==  .Event:RecoverStatus % 31
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0001
  		ExecWait  DoRecover
  	Case  ==  .Event:BeginAirLift % 3A
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0009
  		ExecWait  DoAirLift
  	Case  ==  .Event:BlowAway % 16
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0009
  		ExecWait  DoBlowAway
  		Return
  	Default
  EndSwitch
  Goto EndOfScript
  Label TransformIntoSpirit
  Call  GetActorVar   ( .Actor:Self 13` *Var8 ) %Phase: 1 = Phase 1. 2 = Phase 2, 3 = Phase 3.
  If *Var8 == 2`
    ExecWait $Script_Transform_Into_Spirit
  EndIf
  Label EndOfScript
  Call  EnableIdleScript  ( .Actor:Self .True )
  Call  UseIdleAnimation  ( .Actor:Self .True )
  Return
  End
}

% Previous Attack: 0 = Regular Scythe Swing. 1 = Life Steal. 2 = Bone Attack. 3 = Dry Bones Summon
% ExecWait $Script_Bones_Attack
% ExecWait $Script_Scythe_Swing
% ExecWait $Script_Lifesteal
% ExecWait $Script_Summon_Drybones
#new:Script $Script_TakeTurn_Necromancer {
  /%
  SetConst  *Var[0]  00000001
  SetConst  *Var[1]  00EA0018
  ExecWait  DoDeath
  %/
  % Goto EndOfScript
  Call  UseIdleAnimation  ( .Actor:Self .False )
  Call  EnableIdleScript  ( .Actor:Self .False )
  Call  SetActorVar   ( .Actor:Self 9` 0` ) % Reset Heal Amount
  ExecWait $Script_Reset_Parts
  % ExecWait $Script_Scythe_Swing_Spirit
  % ExecWait $Script_Summon_DryTubbaBlubba
  % Goto EndOfScript
  % Quick phase 2 testing
  /%
  Call  GetActorVar   ( .Actor:Self 22` *Var0 )
  If *Var0 == 1`
    Goto TubbaBlubba
  EndIf
  ExecWait $Script_Summon_Drybones
  Call  SetActorVar   ( .Actor:Self 22` 1` )
  Goto EndOfScript
  Label TubbaBlubba
  ExecWait $Script_Summon_DryTubbaBlubba
  Goto EndOfScript
  %/
  Call  GetActorVar   ( .Actor:Self 13` *Var0 ) % Phase: 1 = Phase 1. 2 = Phase 2, 3 = Phase 3.
  Switch *Var0
    Case == 1`
      ExecWait $Script_Phase_One
    Case == 2`
      ExecWait $Script_Phase_Two
    Case == 3`
      Call  GetActorVar   ( .Actor:Self 0` *Var8 )
      If *Var8 == 50`
        ExecWait $Script_Possess_Dry_Blubba
      Else
        ExecWait $Script_Scythe_Swing_Spirit
      EndIf
    Default
  EndSwitch
  /%
  If *Var0 >= 20`
    ExecWait $Script_Scythe_Swing
  Else
    ExecWait $Script_Lifesteal
  EndIf
  Call GetActorVar ( .Actor:Self 0` *Var0)
  Switch  *Var[0]
    Case == 0`
      ExecWait $Script_Scythe_Swing
    Case == 1`
      ExecWait $Script_Summon_Drybones
  EndSwitch
  %/
  Label EndOfScript
  Call  EnableIdleScript  ( .Actor:Self .True )
  Call  UseIdleAnimation  ( .Actor:Self .True )
  Return
  End
}

#new:Script $Script_Phase_One {
  Call  GetActorHP    ( .Actor:Self *VarA )
  If *VarA < 26` % 26
    ExecWait $Script_Summon_DryTubbaBlubba
    Return
  EndIf
  Call  GetActorVar   ( .Actor:Self 15` *Var0 )
  If *Var0 <= 0`
    If *VarA <= 79`
      Call  GetActorVar   ( .Actor:Self 7` *Var0 )
      Switch *Var0
        Case < 2 % 0 or 1 Dry Bones active
          ExecWait $Script_Summon_Drybones
          Return
        Case == 2 % 2 Dry Bones active
          Call  RandInt   ( 100` *Var0 )
          If *Var0 <= 65`
            ExecWait $Script_Summon_Drybones
            Return
          Else
            ExecWait $Script_Absorb_Drybones_Attack
            Return
          EndIf
        Case > 2 % 3 or 4 Dry Bones active
          ExecWait $Script_Absorb_Drybones_Attack
          Return
      EndSwitch
    EndIf
  EndIf
  Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
  If *VarA == *Var1
    Call  GetActorVar   ( .Actor:Self 0` *Var0 )
    If *Var0 == 2`
      ExecWait $Script_Scythe_Swing
    Else
      ExecWait $Script_Bones_Attack
    EndIf
    Return
  EndIf
  Call  RandInt   ( 100` *Var0 )
  Switch  *Var0
  Case < 40`
    Call  GetActorVar   ( .Actor:Self 0` *Var0 )
    If *Var0 == 1`
      ExecWait $Script_Scythe_Swing
    Else
      ExecWait $Script_Lifesteal
    EndIf
  Case < 75`
    Call  GetActorVar   ( .Actor:Self 0` *Var0 )
    If *Var0 == 2`
      ExecWait $Script_Scythe_Swing
    Else
      ExecWait $Script_Bones_Attack
    EndIf
  Default
    Call  GetActorVar   ( .Actor:Self 0` *Var0 )
    If *Var0 == 0`
      ExecWait $Script_Lifesteal
    Else
      ExecWait $Script_Scythe_Swing
    EndIf
  EndSwitch
  Call  GetActorVar   ( .Actor:Self 15` *Var0 ) % Turns until Dry Bones Summon can be performed
  If *Var0 > 0
    Sub *Var0 1`
  EndIf
  Call  SetActorVar   ( .Actor:Self 15` *Var0 ) % Turns until Dry Bones Summon can be performed
  Return
  End
}

#new:Script $Script_Phase_Two {
  %Call SetEnemyHP (.Actor:Self 1`)
  Call  RandInt   ( 100` *Var0 )
  Switch  *Var0
  Case < 30`
    Call  GetActorVar   ( .Actor:Self 0` *Var0 )
    If *Var0 == 4`
      ExecWait $Script_Scythe_Swing
    Else
      ExecWait $Script_Lightning
    EndIf
  Case < 50`
    Call  GetActorVar   ( .Actor:Self 0` *Var0 )
    If *Var0 == 1`
      ExecWait $Script_Bones_Attack
    Else
      ExecWait $Script_Lifesteal
    EndIf
  Case < 70`
    Call  GetActorVar   ( .Actor:Self 0` *Var0 )
    If *Var0 == 2`
      ExecWait $Script_Scythe_Swing
    Else
      ExecWait $Script_Bones_Attack
    EndIf
  Default
    Call  GetActorVar   ( .Actor:Self 0` *Var0 )
    If *Var0 == 0`
      ExecWait $Script_Lightning
    Else
      ExecWait $Script_Scythe_Swing
    EndIf
  EndSwitch
  Return
  End
}

#new:Script $Script_Scythe_Swing_Spirit {
  Call  SetAnimation  ( .Actor:Self 00000001 00EA003F )
  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  Call  UseBattleCamPreset    ( 0000003F )
  Call  BattleCamTargetActor  ( .Actor:Self )
  Call  SetGoalToTarget   ( .Actor:Self )
  Call  AddGoalPos    ( .Actor:Self  10`  -13`  0` )
  Call  SetActorSpeed ( .Actor:Self *Fixed[5.5] )
  Call  FlyToGoal     ( .Actor:Self  0`  -5` .Easing:CosIn )
  Wait 4`
  Call  SetAnimation  ( .Actor:Self 00000001 00EA0042 )
  Wait 29`
  Wait  17`
  Call  SetGoalToTarget   ( .Actor:Self )
  Call  AddGoalPos        ( .Actor:Self  -2`  0`  0` )
  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 0` 0` 2` 00000020 )
  Switch  *Var0
    CaseOR  ==  .HitResult:Hit % 0
    CaseOR  ==  .HitResult:QuakeImmune % 2
    CaseOR  ==  .HitResult:Miss % 6
    CaseOR  ==  .HitResult:Lucky % 5
      Wait 30`
      Call  SetAnimation  ( .Actor:Self 00000001 00EA003F )
      Set *Var0 0`
      Loop 6`
        Add *Var0 30`
        Call  SetActorYaw   ( .Actor:Self  *Var0 )
        Wait 1`
      EndLoop
      Wait 10`
      Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
      Call  SetGoalToHome ( .Actor:Self )
      Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
      Wait 10`
      Loop 6`
        Sub *Var0 30`
        Call  SetActorYaw   ( .Actor:Self  *Var0 )
        Wait 1`
        Call  SetActorVar   ( .Actor:Self 0` 50` )
      EndLoop
    EndCaseGroup
  EndSwitch
  Return
  End
}

#new:Script $Script_Scythe_Swing {
  Call  SetAnimation  ( .Actor:Self 00000001 00EA0002 )
  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  Call  UseBattleCamPreset    ( 0000003F )
  Call  BattleCamTargetActor  ( .Actor:Self )
  Call  SetGoalToTarget   ( .Actor:Self )
  Call  AddGoalPos    ( .Actor:Self  25`  -13`  0` )
  Call  GetActorVar   ( .Actor:Self 13` *Var0 ) % Phase: 1 = Phase 1. 2 = Phase 2, 3 = Phase 3.
  Switch *Var0
    Case == 1`
      Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
    Case == 2`
      Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  EndSwitch
  Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:CosIn )
  Wait 4`
  Call  SetAnimation  ( .Actor:Self 00000001 00EA0005 )
  Wait 1`
  Call  GetActorVar   ( .Actor:Self 13` *Var0 ) % Phase: 1 = Phase 1. 2 = Phase 2, 3 = Phase 3.
  Switch *Var0
    Case == 1`
      Call  SetAnimation  ( .Actor:Self 00000001 00EA0012 )
      Wait  3`
    Case == 2`
      Call  RandInt   ( 100` *Var0 )
      If *Var0 <= 50`
        Call  SetAnimation  ( .Actor:Self 00000001 00EA0012 )
        Wait  3`
      Else
        Wait  20`
        Call  SetAnimation  ( .Actor:Self 00000001 00EA0035 )
        Wait  9`
        Call  SetAnimation  ( .Actor:Self 00000001 00EA0012 )
        Wait  3`
      EndIf
  EndSwitch
  Call  PlaySoundAtActor  ( .Actor:Player 00002115 )
  Wait  3`
  Call  SetGoalToTarget   ( .Actor:Self )
  Call  AddGoalPos        ( .Actor:Self  -2`  0`  0` )
  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 0` 0` 7` 00000020 )
  Switch  *Var0
  	CaseOR  ==  .HitResult:Hit % 0
  	CaseOR  ==  .HitResult:QuakeImmune % 2
  	CaseOR  ==  .HitResult:Miss % 6
  	CaseOR  ==  .HitResult:Lucky % 5
      Call GetBattleFlags ( *VarA )
      If  *VarA  &  80000000
        % Wait 1`
      Else
        Thread
          % Call SummonEnemy   ( $SpecialFormation_Spirit 00000000 )
          ExecWait $Script_Spawn_Spirit
          Call  SetActorVar   ( .Actor:Self 14` 0` ) %Spawn spirit
        EndThread
      EndIf
      Wait 30`
      Call  GetActorVar   ( .Actor:Self 13` *Var0 ) %Phase: 1 = Phase 1. 2 = Phase 2, 3 = Phase 3.
      Switch *Var0
        Case == 1`
          Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
        Case == 2`
          Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
      EndSwitch
      % Call  SetActorVar   ( .Actor:Self 12` 1` )
      Call  ResetAllActorSounds   ( .Actor:Self )
      Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
      % Call  SetActorYaw   ( .Actor:Self  180` )
      Call  SetAnimation  ( .Actor:Self 00000001 00EA0001 )
      Call  SetGoalToHome ( .Actor:Self )
      Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
      Call  SetAnimation  ( .Actor:Self 00000001 00EA0001 )
      If  *VarA  &  80000000
        % Wait 1`
      Else
        Wait 4`
        Call  SetActorVar   ( .Actor:Self 14` 1` ) % Suck in spirit after swing. Call  SetActorVar   ( .Actor:Self 14` 0` ) Suck in spirit after swing.
        Call  SetAnimation  ( .Actor:Self 00000001 00EA0026 )
        % Call  PlaySoundAtActor  ( .Actor:Self 000020B8 )
        Call  PlaySoundAtActor  ( .Actor:Self 00000208 )
        Wait 60`
      EndIf
  	EndCaseGroup
  EndSwitch
  Call  SetActorVar   ( .Actor:Self 0` 0` )
  Return
  End
}

#new:Script $Script_Spawn_Spirit {
  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  Call  SetAnimation  ( .Actor:Self 00000003 00EA0014 )
  Call  GetActorPos ( .Actor:Player *Var0 *Var1 *Var2 )
  Add   *Var1  10`
  Add   *Var2  5`
  Call  SetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  Thread
    Set *Var4 10`
    Loop 9`
        Add *Var4 16`
        Call  SetPartAlpha  ( .Actor:Self 00000003 *Var4 )
        Wait 1`
    EndLoop
  EndThread
  Wait 1`
  Call  GetActorPos ( .Actor:Player *Var0 *Var1 *Var2 )
  Add   *Var0  20`
  Add   *Var1  30`
  Call FlyPartTo 	( .Actor:Self 00000003 *Var0 *Var1 *Var2 00000010 00000021 .Easing:Linear )
  Label CheckAgain
  Call  GetActorVar   ( .Actor:Self 14` *Var0 ) % Suck in spirit after swing. Call  SetActorVar   ( .Actor:Self 14` 0` ) % Suck in spirit after swing.
  If *Var0 == 1`
    Goto SuckInSpirit
  Else
    Wait 1`
    Goto CheckAgain
  EndIf
  Label SuckInSpirit
  Call  SetActorVar   ( .Actor:Self 14` 0` ) % Suck in spirit after swing. Call  SetActorVar   ( .Actor:Self 14` 0` ) % Suck in spirit after swing.
  Call  SetAnimation  ( .Actor:Self 00000003 00EA0015 )
  Wait 18`
  Call GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
  Add   *Var1  10`
  Add   *Var2  5`
  Call FlyPartTo 	( .Actor:Self 00000003 *Var0 *Var1 *Var2 00000010 0` .Easing:CosIn )
  Call  SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  Call  SetActorVar   ( .Actor:Self 9` 3` ) % Heal Amount
  ExecWait $Script_Heal_HP
  Return
  End
}

#new:Script $Script_Heal_HP {
  Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  Add *Var1 2`
  Add *Var2 22`
  Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  Thread
    Wait  15`
    Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
  EndThread
  Call  GetActorVar   ( .Actor:Self 9` *VarE ) %Heal Amount
  Call  PlayEffect    ( ~FX:Sparkles:Star *Var1 *Var2 *Var3 *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  Call  PlayEffect    ( ~FX:Recover:HP *Var1 *Var2 *Var3 *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  Call  GetActorHP    ( .Actor:Self *Var0 )
  Add   *Var0  *VarE
  Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
  If  *Var0  >  *Var1
    Set   *Var0  *Var1
  EndIf
  Call  SetEnemyHP    ( .Actor:Self *Var0 )
  Return
  End
}

#new:Script $Script_Absorb_Drybones_Attack {
  Call  UseBattleCamPreset    ( 0000000E )
  Call  BattleCamTargetActor  ( .Actor:Self )
  Wait 6`
  ExecWait $Script_SwitchToBook
  Call  GetActorVar   ( .Actor:Self 10` *VarD ) % First time absorbing Dry Bones
  If *VarD == 0`
    Call  ActorSpeak        ( 002F0003 .Actor:Self 00000001 00EA0024 00EA0022 )
    Call  SetActorVar   ( .Actor:Self 10` 1`  ) % First time absorbing Dry Bones
  EndIf
  ExecWait $Script_Absorb_Drybones
  Wait 19`
  ExecWait $Script_SwitchToScythe
  Call  RandInt   ( 100` *Var0 )
  Switch *Var0
   Case < 40`
     Call  SetActorVar   ( .Actor:Self 15` 1` ) % Turns until Dry Bones Summon can be performed
   Case < 95`
     Call  SetActorVar   ( .Actor:Self 15` 2` ) % Turns until Dry Bones Summon can be performed
   Default
     Call  SetActorVar   ( .Actor:Self 15` 3` ) % Turns until Dry Bones Summon can be performed
  EndSwitch
  Return
  End
}

#new:Script $Script_Absorb_Drybones {
  Call  SetActorVar   ( .Actor:Self 9` 0` )
  Call  SetAnimation  ( .Actor:Self 00000001 00EA0023 )
  Wait 14`
  Call  PlaySoundAtActor  ( .Actor:Self 000020B8 )
  Set *VarE 0`
  Set *VarD 00000200
  Loop 4`
    Add *VarD 1`
    Call  ActorExists   ( *VarD *Var1 )
    If *Var1 == .True
      Thread
        Call  UseIdleAnimation  ( *VarD .False )
        Call  EnableIdleScript  ( *VarD .False )
        Call  SetAnimation  ( *VarD 00000001 00530007 )
        Call  SetActorVar   ( *VarD 1` 1`  )
        Call  GetActorHP (*VarD *Var0)
        Call  GetActorVar   ( .Actor:Self 9` *Var1 )
        Add *Var1 *Var0
        Call  SetActorVar   ( .Actor:Self 9` *Var1 )
        Call  GetActorPos (*VarD *Var0 *Var1 *Var2)
        Add *Var1 15`
        Call  PlayEffect    ( 00000013 00000001 *Var0 *Var1 *Var2 *Fixed[0.5] 00000034 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        Wait 42`
        Call  SetAnimation  ( *VarD 00000001 00530008 )
      EndThread
    EndIf
  EndLoop
  Wait 42`
  Call  GetActorVar   ( .Actor:Self 9` *Var1 )
  If *Var1 < 1`
    Call  SetActorVar   ( .Actor:Self 9` 1` )
  EndIf
  ExecWait $Script_Heal_HP
  Return
  End
}

#new:Script $Script_Summon_Drybones {
  Call  GetActorVar   ( .Actor:Self 8` *VarD ) % First time summoning Dry Bones 1 = SummedAlreadyBefore.
  If *VarD == 0`
    Call  UseBattleCamPreset    ( 0000000D )
  Else
    Call  UseBattleCamPreset    ( 0000000E )
  EndIf
  Call  BattleCamTargetActor  ( .Actor:Self )
  Wait 6`
  ExecWait $Script_SwitchToBook
  Call  SetAnimation  ( .Actor:Self 00000001 00EA000E )
  If *VarD == 0`
      Wait 30`
  Else
    Wait 5`
  EndIf
  If *VarD == 0`
    Call  ActorSpeak        ( 002F0002 .Actor:Self 00000001 00EA000F 00EA000E )
    Call  UseBattleCamPreset    ( 0000000E )
    Wait 5`
    Call  SetActorVar   ( .Actor:Self 8` 1` ) % First time summoning Dry Bones 1 = SummedAlreadyBefore.
    EndIf
    Call  ActorSpeak        ( 002F0001 .Actor:Self 00000001 00EA0020 00EA000E )
    Loop 2`
    Call  ActorExists   ( .Actor:Enemy1 *Var1 )
    If *Var1 == .False
      Call  SummonEnemy   ( $Specialformation_Drybones1 0` )
    Else
      Call  ActorExists   ( .Actor:Enemy2 *Var1 )
      If *Var1 == .False
        Call  SummonEnemy   ( $Specialformation_Drybones2 0` )
      Else
        Call  ActorExists   ( .Actor:Enemy3 *Var1 )
        If *Var1 == .False
          Call  SummonEnemy   ( $Specialformation_Drybones3 0` )
        Else
          Call  SummonEnemy   ( $Specialformation_Drybones4 0` )
        EndIf
      EndIf
  EndIf
  EndLoop
  ExecWait $Script_SwitchToScythe
  Call  RandInt   ( 100` *Var0 )
  Switch *Var0
  Case < 30`
    Call  SetActorVar   ( .Actor:Self 15` 3` ) % Turns until Dry Bones Summon can be performed
  Case < 85`
    Call  SetActorVar   ( .Actor:Self 15` 4` ) % Turns until Dry Bones Summon can be performed
  Default
    Call  SetActorVar   ( .Actor:Self 15` 5` ) % Turns until Dry Bones Summon can be performed
  EndSwitch
  Call  GetActorVar   ( .Actor:Self 7` *Var0 ) % Amount of Dry Bones alive
  Add *Var0 2`
  Call  SetActorVar   ( .Actor:Self 7` *Var0 ) % Amount of Dry Bones alive
  Wait 2`
  Return
  End
}

#new:Script $Script_Spawn_Spirit_Many {
  Call  PlaySoundAtActor  ( .Actor:Self 00000208 )
  Call  GetActorVar   ( .Actor:Self 11` *VarD ) % Current Spirit ID
  Call  SetPartFlagBits   ( .Actor:Self *VarD 00000001 .False )
  Call  GetActorVar   ( .Actor:Self 12` *VarC ) % Current Spirit Count
  Switch *VarC
    Case == 0`
      Call  SetPartPos    ( .Actor:Self *VarD -30` 150` 5` )
    Case == 1`
      Call  SetPartPos    ( .Actor:Self *VarD 70` 150` 5` )
    Case == 2`
      Call  SetPartPos    ( .Actor:Self *VarD 200` 50` 5` )
    Case == 3`
      Call  SetPartPos    ( .Actor:Self *VarD 0` 150` 5` )
    Case == 4`
      Call  SetPartPos    ( .Actor:Self *VarD -60` 150` 5` )
    Case == 5`
      Call  SetPartPos    ( .Actor:Self *VarD 44` 150` 5` )
    Case == 6`
      Call  SetPartPos    ( .Actor:Self *VarD 220` 74` 5` )
    Case == 7`
      Call  SetPartPos    ( .Actor:Self *VarD 62` 150` 5` )
    Case == 8`
      Call  SetPartPos    ( .Actor:Self *VarD -18` 150` 5` )
    Case == 9`
      Call  SetPartPos    ( .Actor:Self *VarD 250` 63` 5` )
    Case == 10`
      Call  SetPartPos    ( .Actor:Self *VarD -50` 150` 5` )
    Case == 11`
      Call  SetPartPos    ( .Actor:Self *VarD -30` 150` 5` )
    Case == 12`
      Call  SetPartPos    ( .Actor:Self *VarD 70` 150` 5` )
  EndSwitch
  Call  SetPartAlpha  ( .Actor:Self *VarD 144` )
  Call  SetAnimation  ( .Actor:Self *VarD 00EA0015 )
  Call GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
  Add   *Var1  10`
  Add   *Var2  5`
  Call FlyPartTo 	( .Actor:Self *VarD *Var0 *Var1 *Var2 00000010 0` .Easing:CosIn )
  Call  SetPartFlagBits   ( .Actor:Self *VarD 00000001 .True )
  Call  SetActorVar   ( .Actor:Self 9` 3` ) % Heal Amount
  ExecWait $Script_Heal_HP
  Return
  End
}

#new:Script $Script_Atract_Many_Souls {
  Call  UseBattleCamPreset    ( 00000002 )
  Call  BattleCamTargetActor  ( .Actor:Self )
  Wait 6`
  Call  SetAnimation  ( .Actor:Self 00000001 00EA0032 )
  Wait 14`
  Call GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
  Sub *Var0 19`
  Add *Var1 24`
  Add *Var2 5`
  Call  PlayEffect    ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  % Call  PlaySoundAtActor  ( .Actor:Self 000020B8 )
  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  Wait 40`
  Set *VarA 21`
  Loop 3
    Call  SetActorVar   ( .Actor:Self 11` 3` ) % Current Spirit ID
    Exec $Script_Spawn_Spirit_Many
    Call  GetActorVar   ( .Actor:Self 12` *Var0 ) % Current Spirit Count
    Add *Var0 1`
    Sub *VarA 1`
    Call  SetActorVar   ( .Actor:Self 12` *Var0 ) % Current Spirit Count
    Wait *VarA
    Call  SetActorVar   ( .Actor:Self 11` 4` ) % Current Spirit ID
    Exec $Script_Spawn_Spirit_Many
    Call  GetActorVar   ( .Actor:Self 12` *Var0 ) % Current Spirit Count
    Add *Var0 1`
    Sub *VarA 1`
    Call  SetActorVar   ( .Actor:Self 12` *Var0 ) % Current Spirit Count
    Wait *VarA
    Call  SetActorVar   ( .Actor:Self 11` 5` ) % Current Spirit ID
    Exec $Script_Spawn_Spirit_Many
    Call  GetActorVar   ( .Actor:Self 12` *Var0 ) % Current Spirit Count
    Add *Var0 1`
    Sub *VarA 1`
    Call  SetActorVar   ( .Actor:Self 12` *Var0 ) % Current Spirit Count
    Wait *VarA
    Call  SetActorVar   ( .Actor:Self 11` 6` ) % Current Spirit ID
    Exec $Script_Spawn_Spirit_Many
    Call  GetActorVar   ( .Actor:Self 12` *Var0 ) % Current Spirit Count
    Add *Var0 1`
    Sub *VarA 1`
    Call  SetActorVar   ( .Actor:Self 12` *Var0 ) % Current Spirit Count
    Wait *VarA
  EndLoop
  Wait 12`
  Call  SetAnimation  ( .Actor:Self 00000001 00EA0033 )
  Return
  End
}

#new:Script $Script_Summon_DryTubbaBlubba {
  Call  UseBattleCamPreset    ( 0000000D )
  Call  BattleCamTargetActor  ( .Actor:Self )
  Call  SetAnimation  ( .Actor:Self 00000001 00EA002E )
  Wait 20`
  Call  ActorSpeak        ( 002F0004 .Actor:Self 00000001 00EA002F 00EA002E )
  ExecWait $Script_SwitchToBook
  Call  SetAnimation  ( .Actor:Self 00000001 00EA000E )
  Wait 10`
  ExecWait $Script_Atract_Many_Souls
  Wait 20`
  Call  SetAnimation  ( .Actor:Self 00000001 00EA000E )
  Wait 10`

  Set *VarD 00000200
  Label CheckNextDrybones
  Add *VarD 1`
  Call  ActorExists   ( *VarD *Var1 )
  If *Var1 == .True
    Goto AbsorbDrybones
  EndIf
  If *VarD == 00000204 % Enemy 4 is no dry bones (can only get here if enemy 1-3 are no dry bones)
    Call  UseBattleCamPreset    ( 0000000E )
    Wait 6`
    Call  ActorSpeak        ( 002F0007 .Actor:Self 00000001 00EA000F 00EA000E )
    Goto SpawnDryTubbaBlubba
  EndIf
  Goto CheckNextDrybones

  Label AbsorbDrybones
  Call  UseBattleCamPreset    ( 0000000E )
  Wait 6`
  Call  ActorSpeak        ( 002F0005 .Actor:Self 00000001 00EA0024 00EA0022 )
  ExecWait $Script_Absorb_Drybones
  Wait 19`

  Label SpawnDryTubbaBlubba
  Call  SetAnimation  ( .Actor:Self 00000001 00EA0022 )
  Wait 20`
  Set *Var0 0`
  Loop 6`
    Add *Var0 30`
    Call  SetActorYaw   ( .Actor:Self *Var0 )
    Wait 1`
  EndLoop
  Wait 10`
  Loop 6`
    Sub *Var0 30`
    Call  SetActorYaw   ( .Actor:Self *Var0 )
    Wait 1`
  EndLoop
  Wait 20`
  Loop 6`
    Add *Var0 30`
    Call  SetActorYaw   ( .Actor:Self *Var0 )
    Wait 1`
  EndLoop
  Wait 4`
  Call  SetGoalToHome ( .Actor:Self )
  Call  AddGoalPos    ( .Actor:Self 60` 0` 0` )
  Call  FlyToGoal     ( .Actor:Self 20` -4` .Easing:CosIn )
  Wait 6`
  Loop 6`
    Add *Var0 30`
    Call  SetActorYaw   ( .Actor:Self  *Var0 )
    Wait 1`
  EndLoop
  Wait 4`
  Call  GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
  Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  Call  HPBarToHome   ( .Actor:Self )
  Call  ActorSpeak        ( 002F0006 .Actor:Self 00000001 00EA000F 00EA000E )
  Call  UseBattleCamPreset    ( 0000000E )
  Wait 5`
  Call  ActorSpeak        ( 002F0000 .Actor:Self 00000001 00EA0020 00EA000E )
  % Call  UseBattleCamPreset    ( 00000002 )
  Call  SummonEnemy   ( $Specialformation_DryTubbaBlubba 0` )
  ExecWait $Script_SwitchToScythe
  Wait 2`
  Call  SetActorVar   ( .Actor:Self 13` 2` ) % Phase: 1 = Phase 1. 2 = Phase 2, 3 = Phase 3.
  % Call CancelEnemyTurn ( 00000001 )
  Call  $Function_Change_BGM ( )
  Return
  End
}

#new:Script $Script_Reset_Parts {
  Set *Var0 2`
  Loop 4
    Add *Var0 1`
    Call  SetPartRotation   ( .Actor:Self *Var0 0` 0` 0` )
    Call  SetPartAlpha  ( .Actor:Self *Var0 300` )
  EndLoop
  Return
  End
}

% Spawn bones from the ground to fly towards Mario, 3 rapid action commands to block.
#new:Script $Script_Bones_Attack {
  Call  UseBattleCamPreset    ( 0000000E )
  Call  BattleCamTargetActor  ( .Actor:Self )
  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  ExecWait $Script_SwitchToBook
  Call  SetAnimation  ( .Actor:Self 00000001 00EA000E )
  Wait 20`
  Call  SetAnimation  ( .Actor:Self 00000001 00EA002A )
  Call  PlaySoundAtActor  ( .Actor:Self 0000028E )
  Call  SetAnimation      ( .Actor:Player 00000000 0001002B )
  Wait 10`
  Thread
    Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[5.0] )
    Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[3.0] )
    Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[1.0] )
    Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[0.5] )
    Call  UseIdleAnimation  ( .Actor:Player .True )
    Call  EnableIdleScript  ( .Actor:Player .True )
  EndThread
  Call  SetActorVar   ( .Actor:Self 1` 1` ) % Currently Rotating
  Call  SetActorVar   ( .Actor:Self 2` 3` ) % Skull Bones ID
  Exec $Script_Spawn_SkullBones
  Wait 3`
  Call  SetActorVar   ( .Actor:Self 2` 4` ) % Skull Bones ID
  Exec $Script_Spawn_SkullBones
  Wait 3`
  Call  SetActorVar   ( .Actor:Self 2` 5` ) % Skull Bones ID
  Exec $Script_Spawn_SkullBones
  Call  GetActorVar   ( .Actor:Self 13` *Var0 ) %Phase: 1 = Phase 1. 2 = Phase 2, 3 = Phase 3.
  If *Var0 == 2`
    Wait 3`
    Call  SetActorVar   ( .Actor:Self 2` 6` ) % Skull Bones ID
    Exec $Script_Spawn_SkullBones
  EndIf
  Wait 25`
  Call  SetAnimation  ( .Actor:Self 00000001 00EA0021 )
  Wait 15`
  Call  UseBattleCamPreset    ( 0000003F )
  Call  BattleCamTargetActor  ( .Actor:Self )
  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  Wait 4`
  Call  SetAnimation  ( .Actor:Self 00000001 00EA002B )
  Wait 14`
  Set *VarE 2`
  Call  GetActorVar   ( .Actor:Self 13` *Var0 ) %Phase: 1 = Phase 1. 2 = Phase 2, 3 = Phase 3.
  If *Var0 == 2`
    Set *VarC 4`
  Else
    Set *VarC 3`
  EndIf
  Loop *VarC
    Call  SetAnimation  ( .Actor:Self 00000001 00EA002B )
    Call  SetAnimation  ( .Actor:Self 00000001 00EA002C )
    Add *VarE 1`
    Wait 3`
    Call  GetActorVar (.Actor:Self *VarE *VarD) % SkullBone #E Type. 0 = Bone, 1 = Skull, 2 = Rib.
    Call  PlaySoundAtPart   ( .Actor:Self *VarE 000002D1 )
    Call  SetPartSounds     ( .Actor:Self *VarE .ActorSound:Walk 00000000 00000000 )
    Call  SetPartSounds     ( .Actor:Self *VarE .ActorSound:Jump 00000000 00000000 )
    % Exec  $Script_8021DAC4_22 *VarA
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Switch  *VarD
      Case == 0`
        Call  SetPartMoveSpeed  ( .Actor:Self *VarE *Fixed[13.0] ) % Bone Speed
      Case == 1`
        Call  SetPartMoveSpeed  ( .Actor:Self *VarE *Fixed[10.0] )% Skull Speed
      Case == 2`
        Call  SetPartMoveSpeed  ( .Actor:Self *VarE *Fixed[11.0] ) % Rib Speed
      Default
        Call  SetPartMoveSpeed  ( .Actor:Self *VarE *Fixed[13.0] ) % Bone Speed
    EndSwitch
    Call  FlyPartTo ( .Actor:Self *VarE *Var0 *Var1 *Var2 0` 0` .Easing:Linear )
    Wait  2`
    Switch  *VarD
      Case == 0`
        Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 0` 0` 3` 00000020 ) % Bone Damage
      Case == 1`
        Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 0` 0` 4` 00000020 ) % Skull Damage
      Case == 2`
        Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 0` 0` 5` 00000020 ) % Rib Damage
      Default
        Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 0` 0` 3` 00000020 ) % Bone Damage
    EndSwitch
    Call  SetPartFlagBits   ( .Actor:Self *VarE 00000001 .True )
  EndLoop
  Wait 20`
  Call  SetActorVar   ( .Actor:Self 1` 0` ) % Currently Rotating
  ExecWait $Script_SwitchToScythe
  Call  SetActorVar   ( .Actor:Self 0` 2` )
  Return
  End
}

#new:Script $Script_Spawn_SkullBones {
  Call GetActorVar (.Actor:Self 2` *VarF) % Skull Bones ID
  Call  SetPartFlagBits   ( .Actor:Self *VarF 00000001 .False )
  Call  RandInt   ( 50` *Var0 )
  If *Var0 <= 2`
    Call  SetAnimation  ( .Actor:Self *VarF 00EA002D ) % Ribs
    Call  SetActorVar   ( .Actor:Self *VarF 2` ) % Skull Bone #F Type. 0 = Bone, 1 = Skull, 2 = Ribs.
    Set *VarB 2`
  Else
    If *Var0 <= 20`
      If *VarF == 3`
        Call  SetAnimation  ( .Actor:Self *VarF 00EA0029 ) % Bone
        Call  SetActorVar   ( .Actor:Self *VarF 0` ) % Skull Bone #F Type. 0 = Bone, 1 = Skull, 2 = Ribs.
        Set *VarB 0`
      Else
        Call  SetAnimation  ( .Actor:Self *VarF 00EA0028 ) % Skull
        Call  SetActorVar   ( .Actor:Self *VarF 1` ) % Skull Bone #F Type. 0 = Bone, 1 = Skull, 2 = Ribs.
        Set *VarB 1`
      EndIf
    Else
      If *VarF == 3`
        Call  SetAnimation  ( .Actor:Self *VarF 00EA0028 ) % Skull
        Call  SetActorVar   ( .Actor:Self *VarF 1` ) % Skull Bone #F Type. 0 = Bone, 1 = Skull, 2 = Ribs.
        Set *VarB 1`
      Else
        Call  SetAnimation  ( .Actor:Self *VarF 00EA0029 ) % Bone
        Call  SetActorVar   ( .Actor:Self *VarF 0` ) % Skull Bone #F Type. 0 = Bone, 1 = Skull, 2 = Ribs.
        Set *VarB 0`
      EndIf
    EndIf
  EndIf
  Call  GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
  Call  RandInt   ( 10` *Var3 )
  Switch  *VarF
    Case  ==  3`
      Sub   *Var0 30`
    Case  ==  4`
      Add   *Var0 30`
    Case  ==  5`
      Add   *Var0 10`
    Case  ==  6`
      Sub   *Var0 25`
    Default
      Sub   *Var0 30`
  EndSwitch
  Add   *Var0 *Var3
  Sub   *Var1 40`
  Add   *Var2 5`
  Call  SetPartPos    ( .Actor:Self *VarF *Var0 *Var1 *Var2 )
  Set *Var4 *Var1
  Add   *Var4  10`
  Thread
  Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var4 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  Wait  2`
  Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var4 *Var2 00000030 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  Wait  2`
  Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var4 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  EndThread
  Thread % Keep them rotating.
    Set *Var8 0`
    Call  RandInt   ( 10` *Var9 ) % Random Rotation Speed
    Add *Var9 5` % Base Rotation Speed
    If *VarB == 0`% Bonus speed boost for bones
      Add *Var9 10`
    EndIf
    Call RandInt (10` *VarA) % Random Rotation Direction
    Label Rotate1
    If *VarA == 7
      If *VarF == 4`
        Sub *Var8 *Var9
      Else
        Add *Var8 *Var9
      EndIf
    Else
      If *VarF == 4`
        Add *Var8 *Var9
      Else
        Sub *Var8 *Var9
      EndIf
    EndIf
    Call  SetPartRotation   ( .Actor:Self *VarF 00000000 00000000 *Var8 )
    Wait 1`
    Call GetActorVar ( .Actor:Self 1` *Var6)
    If *Var6 == 1
      Goto Rotate1
    EndIf
  EndThread
  Switch  *VarF
    Case  ==  3`
      Add *Var1 100`
    Case  ==  4`
      Add *Var1 75`
    Case  ==  5`
      Add *Var1 30`
    Case  ==  6`
      Add *Var1 40`
    Default
      Add *Var1 100`
  EndSwitch
  Call FlyPartTo 	( .Actor:Self *VarF *Var0 *Var1 *Var2 20` 0` .Easing:CosIn )
  Wait 40`
  Return
  End
}

% Similar to fuzzy lifesteal, spam A to break free.
#new:Script $Script_Lifesteal {
  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  Call  UseBattleCamPreset    ( 0000003F )
  Call  BattleCamTargetActor  ( .Actor:Self )
  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  Call  SetGoalToTarget   ( .Actor:Self )
  Call GetActorVar (.Actor:Self 13` *Var9) %check phase
  If *Var9 == 1`
    Call  AddGoalPos    ( .Actor:Self  65`  -5`  0` )
    Call  SetActorSpeed ( .Actor:Self *Fixed[3.0] )
    Call  FlyToGoal     ( .Actor:Self  0`  -5` .Easing:CosIn )
  EndIf
  ExecWait $Script_SwitchToBook
  Call  SetAnimation  ( .Actor:Self 00000001 00EA0023 )
  Call  GetBattlePhase    ( *Var0 )
  If  *Var0  ==  00000001
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var0  00000032
    Set   *Var1  00000000
    Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
    Goto  64
  EndIf
  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  Call  SetGoalToTarget   ( .Actor:Self )
  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  Add   *Var0  00000032
  Set   *Var1  00000000
  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  Label  64
  Wait  6`
  Call  SetGoalToTarget   ( .Actor:Self )
  Call  AddGoalPos        ( .Actor:Self  -3`  -12`  -15` )
  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  If  *Flag[00]  ==  .True
    Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000000 00000020 )
    Return
  EndIf
  Call  GetStatusFlags    ( .Actor:Player *Var1 )
  If  *Var1  &  ~Flags:StatusFlags:Stone % 100000
   	Wait  10`
    Loop  00000002
      Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
      Wait  21`
      Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
      Wait  10`
      Wait  2`
      Call  EnemyDamageTarget ( .Actor:Self *VarA ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000002 00000040 )
      Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
      Wait  30`
    EndLoop
  Else
    Call  ShowMessageBox    ( 00000031 00007FFF )
    Call  802694A4  ( 00000001 )
    Call  LoadActionCommand ( .ActionCommand:StopLeech )
    Call  802A9000 ( )
    Call  SetupMashMeter    ( 00000001 00000017 00000000 00000000 00000000 00000000 )
    Wait  10`
    Call  SetBattleFlagBits ( 00004000 .False )
    Call  802A9110  ( 00000000 00007FFF 00000003 )
    Set   *VarD  00000000
    Loop  00000005
      Call  UseIdleAnimation  ( .Actor:Player .False )
      Call  SetAnimation      ( .Actor:Player 00000000 0003000C )
      Call  PlaySoundAtActor  ( .Actor:Self 000020B8 )
      Call  GetActorPos (.Actor:Player *Var0 *Var1 *Var2)
      Add *Var1 23`
      Call  PlayEffect    ( 00000013 00000001 *Var0 *Var1 *Var2 *Fixed[0.65] 00000034 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
      Set   *Flag[00]  .False
      Loop  00000015
      	Call  GetActionSuccessCopy  ( *Var1 )
      	If  *Var1  ==  00000001
      		Set   *Flag[00]  .True
      		BreakLoop
       	EndIf
       	Wait  1`
      EndLoop
      If  *Flag[00]  ==  .True
      	Call  UseIdleAnimation  ( .Actor:Player .True )
      	BreakLoop
      EndIf
      Call  PlaySoundAtActor  ( .Actor:Self 000003E0 )
      Set   *Flag[00]  .False
      Loop  00000001
      	Call  GetActionSuccessCopy  ( *Var1 )
      	If  *Var1  ==  00000001
      		Set   *Flag[00]  .True
      		BreakLoop
      	EndIf
      	Wait  1`
    EndLoop
    If  *Flag[00]  ==  .True
    	Call  UseIdleAnimation  ( .Actor:Player .True )
    	BreakLoop
    EndIf
    Set   *Flag[00]  .False
    Loop  00000001
    	Call  GetActionSuccessCopy  ( *Var1 )
    	If  *Var1  ==  00000001
    		Set   *Flag[00]  .True
    		BreakLoop
    	EndIf
    	Wait  1`
    EndLoop
    If  *Flag[00]  ==  .True
    	Call  UseIdleAnimation  ( .Actor:Player .True )
    	BreakLoop
    EndIf
    Set   *Flag[00]  .False
    Loop  00000001
    	Call  GetActionSuccessCopy  ( *Var1 )
    	If  *Var1  ==  00000001
    		Set   *Flag[00]  .True
    		BreakLoop
    	EndIf
    	Wait  1`
    EndLoop
    If  *Flag[00]  ==  .True
    	Call  UseIdleAnimation  ( .Actor:Player .True )
    	BreakLoop
    EndIf
    Set   *Flag[00]  .False
    Loop  00000001
    	Call  GetActionSuccessCopy  ( *Var1 )
    	If  *Var1  ==  00000001
    		Set   *Flag[00]  .True
    		BreakLoop
    	EndIf
    	Wait  1`
    EndLoop
    If  *Flag[00]  ==  .True
      Call  UseIdleAnimation  ( .Actor:Player .True )
      BreakLoop
    EndIf
    Set   *Flag[00]  .False
    Loop  00000002
    	Call  GetActionSuccessCopy  ( *Var1 )
    	If  *Var1  ==  00000001
    		Set   *Flag[00]  .True
    		BreakLoop
    	EndIf
    	Wait  1`
    EndLoop
    If  *Flag[00]  ==  .True
      Call  UseIdleAnimation  ( .Actor:Player .True )
      BreakLoop
    EndIf
    Set   *Flag[00]  .False
    Loop  0000000A
    	Call  GetActionSuccessCopy  ( *Var1 )
    	If  *Var1  ==  00000001
    		Set   *Flag[00]  .True
    		BreakLoop
    	EndIf
      Wait  1`
    EndLoop
    If  *Flag[00]  ==  .True
    	Call  UseIdleAnimation  ( .Actor:Player .True )
    	BreakLoop
    EndIf
    Set   *Flag[00]  .False
    Loop  00000002
    	Call  GetActionSuccessCopy  ( *Var1 )
    	If  *Var1  ==  00000001
    		Set   *Flag[00]  .True
    		BreakLoop
    	EndIf
    	Wait  1`
    EndLoop
    If  *Flag[00]  ==  .True
    	Call  UseIdleAnimation  ( .Actor:Player .True )
    	BreakLoop
    EndIf
    Call  UseIdleAnimation  ( .Actor:Player .True )
    Call  EnemyDamageTarget ( .Actor:Self *VarA ~Flags:DamageType:Unblockable|IgnoreDefense 00000000 00000000 3` 00000040 )
    Call  GetLastDamage     ( .Actor:Player *Var3 )
    If  *Var3  !=  00000000
    	Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
    	Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
    	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
    	Add   *Var1  0000000A
    	Call  $Function_802181A0_14 ( *Var0 *Var1 *Var2 *Var3 )
    	Thread
    		Wait  15`
    		Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
    		Call  $Function_80218254_14 ( *Var0 *Var1 *Var2 *Var3 )
    	EndThread
    	Add   *Var0  00000014
      Add   *Var1  00000014
      Call  PlayEffect    ( ~FX:Recover:HP *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
      Call  GetActorHP    ( .Actor:Self *Var0 )
      Add   *Var0  *Var3
      Call  SetEnemyHP    ( .Actor:Self *Var0 )
    Else
    	Add   *VarD  00000001
    	If  *VarD  >  00000001
      	Call  80269470 ( )
      	BreakLoop
      EndIf
    EndIf
    Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
    Call  GetPlayerHP       ( *Var1 )
    If  *Var1  ==  00000000
      Call  80269470 ( )
      BreakLoop
    EndIf
    Set   *Flag[00]  .False
    Loop  00000023
      Call  GetActionSuccessCopy  ( *Var1 )
      If  *Var1  ==  00000001
        Set   *Flag[00]  .True
        BreakLoop
      EndIf
      Wait  1`
    EndLoop
    If  *Flag[00]  ==  .True
      BreakLoop
    EndIf
  EndLoop
  Call  80269470 ( )
  EndIf
  Call  UseBattleCamPreset    ( 00000002 )
  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  Add   *Var0  00000028
  Set   *Var1  00000000
  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  Wait  1`
  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  Add   *Var0  0000001E
  Call SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  Wait  5`
  Call  SetGoalToHome ( .Actor:Self )
  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  ExecWait $Script_SwitchToScythe
  Call  SetActorSpeed ( .Actor:Self *Fixed[5.5] )
  ExecWait  $Script_ResetActorToHome
  Call  SetActorVar   ( .Actor:Self 0` 1` )
  Return
  End
}

#new:Function $Function_Lighten_Screen {
  0:  ADDIU     SP, SP, FFE8
  4:  SW        S0, 10 (SP)
  8:  COPY      S0, A0
  C:  BEQ       A1, R0, .o1C
 10:  SW        RA, 14 (SP)
 14:  LI        V0, 14
 18:  SW        V0, 70 (S0)
      .o1C
 1C:  CLEAR     A0
 20:  COPY      A1, A0
 24:  LW        V0, 70 (S0)
 28:  COPY      A2, A0
 2C:  SLL       A3, V0, 2
 30:  ADDU      A3, A3, V0
 34:  SLL       A3, A3, 1
 38:  JAL       ~Func:set_background_color_blend
 3C:  ANDI      A3, A3, FE
 40:  LW        V0, 70 (S0)
 44:  ADDIU     V0, V0, FFFF
 48:  BEQ       V0, R0, .o58
 4C:  SW        V0, 70 (S0)
 50:  BEQ       R0, R0, .o70
 54:  CLEAR     V0
      .o58
 58:  CLEAR     A0
 5C:  COPY      A1, A0
 60:  COPY      A2, A0
 64:  JAL       ~Func:set_background_color_blend
 68:  COPY      A3, A0
 6C:  LI        V0, 2
      .o70
 70:  LW        RA, 14 (SP)
 74:  LW        S0, 10 (SP)
 78:  JR        RA
 7C:  ADDIU     SP, SP, 18
}

#new:Function $Function_Darken_Screen {
  0:  ADDIU     SP, SP, FFE8
  4:  SW        S0, 10 (SP)
  8:  COPY      S0, A0
  C:  BEQ       A1, R0, .o48
 10:  SW        RA, 14 (SP)
 14:  JAL       ~Func:mdl_set_all_fog_mode
 18:  LI        A0, 1
 1C:  CLEAR     A0
 20:  COPY      A1, A0
 24:  COPY      A2, A0
 28:  COPY      A3, A0
 2C:  LAW       V0, 801512F0
 34:  LI        V1, 1
 38:  JAL       ~Func:set_background_color_blend
 3C:  SB        V1, 0 (V0)
 40:  LI        V0, 14
 44:  SW        V0, 70 (S0)
      .o48
 48:  CLEAR     A0
 4C:  COPY      A1, A0
 50:  COPY      A2, A0
 54:  LW        V1, 70 (S0)
 58:  LI        V0, 14
 5C:  SUBU      V0, V0, V1
 60:  SLL       A3, V0, 2
 64:  ADDU      A3, A3, V0
 68:  SLL       A3, A3, 1
 6C:  JAL       ~Func:set_background_color_blend
 70:  ANDI      A3, A3, FE
 74:  LW        V0, 70 (S0)
 78:  ADDIU     V0, V0, FFFF
 7C:  SW        V0, 70 (S0)
 80:  SLTIU     V0, V0, 1
 84:  LW        RA, 14 (SP)
 88:  LW        S0, 10 (SP)
 8C:  SLL       V0, V0, 1
 90:  JR        RA
 94:  ADDIU     SP, SP, 18
}

#new:Function $Function_Lightning_Bolt {
  0:  ADDIU     SP, SP, FF88
  4:  SW        S5, 3C (SP)
  8:  COPY      S5, A0
  C:  SW        S1, 2C (SP)
 10:  SW        RA, 4C (SP)
 14:  SW        S8, 48 (SP)
 18:  SW        S7, 44 (SP)
 1C:  SW        S6, 40 (SP)
 20:  SW        S4, 38 (SP)
 24:  SW        S3, 34 (SP)
 28:  SW        S2, 30 (SP)
 2C:  SW        S0, 28 (SP)
 30:  SDC1      F28, 70 (SP)
 34:  SDC1      F26, 68 (SP)
 38:  SDC1      F24, 60 (SP)
 3C:  SDC1      F22, 58 (SP)
 40:  SDC1      F20, 50 (SP)
 44:  LW        A0, 148 (S5)
 48:  LW        S3, C (S5)
 4C:  JAL       ~Func:get_actor
 50:  COPY      S1, A1
 54:  COPY      S0, V0
 58:  BEQ       S0, R0, .o28C
 5C:  LI        V0, 2
 60:  BEQ       S1, R0, .o15C
 64:  ADDIU     S4, S0, C
 68:  JAL       ~Func:heap_malloc
 6C:  LI        A0, 60
 70:  COPY      S1, V0
 74:  SW        S1, 78 (S0)
 78:  LW        A1, 0 (S3)
 7C:  ADDIU     S3, S3, 4
 80:  COPY      A0, S5
 84:  CLEAR     S8
 88:  COPY      S2, S8
 8C:  LI        S7, 3C
 90:  LI        S6, 2D
 94:  COPY      S4, S8
 98:  LIF       F28, 1.0
 A0:  LIF       F26, 10.0
 A8:  LIF       F24, 15.0
 B0:  JAL       ~Func:get_variable
 B4:  ADDIU     S0, S1, 18
 B8:  LW        A1, 0 (S3)
 BC:  MTC1      V0, F22
 C0:  NOP
 C4:  CVT.S.W   F22, F22
 C8:  JAL       ~Func:get_variable
 CC:  COPY      A0, S5
 D0:  MTC1      V0, F20
 D4:  NOP
 D8:  CVT.S.W   F20, F20
      .oDC
 DC:  LI        A0, 2
 E0:  MFC1      A1, F22
 E4:  LUI       A2, 4348
 E8:  MFC1      A3, F20
 EC:  ADDIU     S2, S2, 1
 F0:  SWC1      F22, 10 (SP)
 F4:  SW        R0, 14 (SP)
 F8:  SWC1      F20, 18 (SP)
 FC:  SWC1      F28, 1C (SP)
100:  JAL       ~Func:playFX_5E
104:  SW        S7, 20 (SP)
108:  MTC1      S8, F0
10C:  NOP
110:  CVT.S.W   F0, F0
114:  SW        V0, 0 (S1)
118:  SWC1      F0, FFF0 (S0)
11C:  MTC1      S4, F0
120:  NOP
124:  CVT.S.W   F0, F0
128:  SW        S6, 4 (S0)
12C:  SWC1      F22, FFEC (S0)
130:  SWC1      F20, FFF4 (S0)
134:  SWC1      F26, FFF8 (S0)
138:  SWC1      F0, FFFC (S0)
13C:  SWC1      F24, 0 (S0)
140:  ADDIU     S0, S0, 20
144:  ADDIU     S1, S1, 20
148:  SLTI      V0, S2, 3
14C:  BNE       V0, R0, .oDC
150:  ADDIU     S4, S4, 78
154:  BEQ       R0, R0, .o28C
158:  CLEAR     V0
      .o15C
15C:  CLEAR     S2
160:  LW        S1, 78 (S0)
164:  LIF       F23, 1.9375
16C:  MTC1      R0, F22
170:  ADDIU     S0, S1, 1C
      .o174
174:  JAL       ~Func:cos_deg
178:  LWC1      F12, FFF8 (S0)
17C:  LWC1      F2, FFF4 (S0)
180:  MUL.S     F0, F0, F2
184:  NOP
188:  LWC1      F20, FFE8 (S0)
18C:  LWC1      F12, FFF8 (S0)
190:  JAL       ~Func:sin_deg
194:  ADD.S     F20, F20, F0
198:  LW        V0, 0 (S1)
19C:  LWC1      F4, FFF4 (S0)
1A0:  LWC1      F2, FFF0 (S0)
1A4:  LW        V0, C (V0)
1A8:  SWC1      F20, 4 (V0)
1AC:  LW        V0, 0 (S1)
1B0:  LW        V0, C (V0)
1B4:  SWC1      F20, 10 (V0)
1B8:  LW        V0, 0 (S1)
1BC:  MUL.S     F0, F0, F4
1C0:  NOP
1C4:  LW        V0, C (V0)
1C8:  SWC1      F20, 1C (V0)
1CC:  LW        V0, 0 (S1)
1D0:  ADD.S     F2, F2, F0
1D4:  LW        V0, C (V0)
1D8:  SWC1      F2, C (V0)
1DC:  LW        V0, 0 (S1)
1E0:  LW        V0, C (V0)
1E4:  SWC1      F2, 18 (V0)
1E8:  LW        V0, 0 (S1)
1EC:  LW        V0, C (V0)
1F0:  SWC1      F2, 24 (V0)
1F4:  LW        V0, 0 (S0)
1F8:  SLTI      V0, V0, B
1FC:  BNE       V0, R0, .o218
200:  NOP
204:  LWC1      F0, FFF4 (S0)
208:  CVT.D.S   F0, F0
20C:  ADD.D     F0, F0, F22
210:  CVT.S.D   F0, F0
214:  SWC1      F0, FFF4 (S0)
      .o218
218:  LWC1      F0, FFF8 (S0)
21C:  LWC1      F2, FFFC (S0)
220:  LW        V0, 0 (S0)
224:  ADD.S     F0, F0, F2
228:  SLTI      V0, V0, 1F
22C:  BNE       V0, R0, .o250
230:  SWC1      F0, FFF8 (S0)
234:  MOV.S     F0, F2
238:  LAD       F2, $ConstDouble_80234870_23
240:  CVT.D.S   F0, F0
244:  SUB.D     F0, F0, F2
248:  CVT.S.D   F0, F0
24C:  SWC1      F0, FFFC (S0)
      .o250
250:  ADDIU     S1, S1, 20
254:  LW        V0, 0 (S0)
258:  ADDIU     S2, S2, 1
25C:  ADDIU     V0, V0, FFFF
260:  SW        V0, 0 (S0)
264:  SLTI      V0, S2, 3
268:  BNE       V0, R0, .o174
26C:  ADDIU     S0, S0, 20
270:  LW        S1, 6C (S4)
274:  LW        V0, 1C (S1)
278:  BGTZ      V0, .o28C
27C:  CLEAR     V0
280:  JAL       ~Func:heap_free
284:  COPY      A0, S1
288:  LI        V0, 2
      .o28C
28C:  LW        RA, 4C (SP)
290:  LW        S8, 48 (SP)
294:  LW        S7, 44 (SP)
298:  LW        S6, 40 (SP)
29C:  LW        S5, 3C (SP)
2A0:  LW        S4, 38 (SP)
2A4:  LW        S3, 34 (SP)
2A8:  LW        S2, 30 (SP)
2AC:  LW        S1, 2C (SP)
2B0:  LW        S0, 28 (SP)
2B4:  LDC1      F28, 70 (SP)
2B8:  LDC1      F26, 68 (SP)
2BC:  LDC1      F24, 60 (SP)
2C0:  LDC1      F22, 58 (SP)
2C4:  LDC1      F20, 50 (SP)
2C8:  JR        RA
2CC:  ADDIU     SP, SP, 78
}

#new:ConstDouble $ConstDouble_80234870_23 {
  0.300000d
}

% Just steal the one from bowser or something idk.
#new:Script $Script_Lightning {
  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  Call  UseBattleCamPreset    ( 0000000D )
  Call  BattleCamTargetActor  ( .Actor:Self )
  Call  MoveBattleCamOver (  30` )
  Call  UseBattleCamPreset    ( 00000002 )
  Call  MoveBattleCamOver (  30` )
  ExecWait $Script_SwitchToBook
  % Call  PlaySoundAtActor  ( .Actor:Self 000003EF )
  Call  $Function_Darken_Screen ( )
  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  Call  SetAnimation      ( .Actor:Self 00000001 00EA0038 )
  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  Sub *Var0 16`
  Add *Var1 28`
  Add *Var2 5`
  Call  PlayEffect    ( ~FX:GatherMagic:Pink *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  % Call  PlaySoundAtActor  ( .Actor:Self 000020B8 )
  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  Wait 30`
  /%
  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   	Add   *Var1  00000036
   	Sub   *Var2  00000003
   	Call  PlayEffect    ( ~FX:EnergyIn:YellowPoints *Var0 *Var1 *Var2 *Fixed[1.5] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   	Wait  50`
   	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   	Add   *Var0  00000016
   	Sub   *Var2  00000003
   	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 00000087 *Var2 *Fixed[1.5] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   	Call  PlaySoundAtActor  ( .Actor:Self 00002121 )
   	Sub   *Var2  00000003
   	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000087 *Var2 *Fixed[1.5] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   	Wait  30`
   	Call  RemoveEffect  ( *VarF )
   	Call  RemoveEffect  ( *VarE )
  Else
   	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   	Add   *Var1  00000015
   	Sub   *Var2  00000003
   	Call  PlayEffect    ( ~FX:EnergyIn:YellowPoints *Var0 *Var1 *Var2 *Fixed[0.6] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   	Wait  50`
   	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   	Add   *Var0  00000009
  	Sub   *Var2  00000003
   	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 00000036 *Var2 *Fixed[0.6] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   	Call  PlaySoundAtActor  ( .Actor:Self 00002121 )
   	Sub   *Var2  00000003
   	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000036 *Var2 *Fixed[0.6] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  	Wait  30`
   	Call  RemoveEffect  ( *VarF )
   	Call  RemoveEffect  ( *VarE )
  EndIf
  %/
  Call  PlaySoundAtActor  ( .Actor:Self 00002127 )
  Call  SetGoalToTarget   ( .Actor:Self )
  Call  SetAnimation      ( .Actor:Self 00000001 00EA0036 )
  Thread
  	Call  GetGoalPos    ( .Actor:Self *Var0 00000000 *Var1 )
  	Call  $Function_Lightning_Bolt ( *Var0 *Var1 )
  EndThread
  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  Wait  5`
  Call  SetGoalToTarget   ( .Actor:Self )
  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  If  *Var0  &  00080000
  	Set   *Var0  00000014
  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact|Electric 00000000 00000000 *Var0 00000020 )
  Else
 	  Set   *Var0  0000000A
 	  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact|Electric 00000000 00000000 *Var0 00000020 )
  EndIf
  Switch  *VarF
   	CaseOR  ==  .HitResult:Hit % 0
  	CaseOR  ==  .HitResult:QuakeImmune % 2
   	CaseOR  ==  0000000A % A
   		Wait  30`
   		Call  $Function_Lighten_Screen ( )
   		If  *VarF  ==  0000000A % A
        Return
      EndIf
    EndCaseGroup
  EndSwitch
  ExecWait $Script_SwitchToScythe
  Call  SetActorVar   ( .Actor:Self 0` 4` )
  Return
  End
}

% Throw the scythe quickly from a distance.
#new:Script $Script_Throw_Scythe {
  Return
  End
}

% Slash the scythe to create a dark shockwave projectile.
#new:Script $Script_Scythe_Projectile {
  Return
  End
}

#new:Script $Script_ResetActorToHome {
  Call  ResetAllActorSounds   ( .Actor:Self )
  Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
  % Call  SetActorYaw   ( .Actor:Self  180` )
  Call  SetAnimation  ( .Actor:Self 00000001 00EA0001 )
  Call  SetGoalToHome ( .Actor:Self )
  Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:Linear )
  Call  SetAnimation  ( .Actor:Self 00000001 00EA0001 )
  % Call  SetActorYaw   ( .Actor:Self  0` )
  Return
  End
}

#new:Script $Script_SwitchToBook {
  Call  SetAnimation  ( .Actor:Self 00000001 00EA0009 )
  Wait 5`
  Call  SetAnimation  ( .Actor:Self 00000001 00EA000C )
  Wait 5`
  Return
  End
}

#new:Script $Script_SwitchToScythe {
  Call  SetAnimation  ( .Actor:Self 00000001 00EA000D )
  Wait 8`
  Call  SetAnimation  ( .Actor:Self 00000001 00EA000A )
  Wait 5`
  Return
  End
}

#new:Script $Script_Possess_Dry_Blubba {
  Call  UseIdleAnimation  ( .Actor:Self .False )
  Call  EnableIdleScript  ( .Actor:Self .False )
  Call  UseBattleCamPreset    ( 0000000D )
  Call  BattleCamTargetActor  ( .Actor:Self )
  Call  SetAnimation  ( .Actor:Self 00000001 00EA003F )
  Wait 10`
  Call  ActorSpeak        ( 002F000B .Actor:Self 00000001 00EA0040 00EA003F )
  Wait 5`
  Set *Var0 0`
  Loop 6`
    Add *Var0 30`
    Call  SetActorYaw   ( .Actor:Self  *Var0 )
    Wait 1`
  EndLoop
  Wait 30`
  Loop 6`
    Sub *Var0 30`
    Call  SetActorYaw   ( .Actor:Self  *Var0 )
    Wait 1`
  EndLoop
  Wait 20`
  Call  ActorSpeak        ( 002F000C .Actor:Self 00000001 00EA0040 00EA003F )
  % Go possess dry blubba
  Call GetActorVar (.Actor:Self 16` *VarB )
  Call  SetTargetActor    ( .Actor:Self *VarB )
  Call  SetGoalToTarget   ( .Actor:Self )
  Call  AddGoalPos    ( .Actor:Self  0`  -10`  -12` )
  Call  FlyToGoal 	( .Actor:Self 16` -10` .Easing:CosIn )
  Call  SetPartAlpha  ( .Actor:Self 00000001 0` )
  Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  Call  GetActorPos (.Actor:Self *Var0 *Var1 *Var2)
  Sub *Var0 0`
  Add *Var1 12`
  Add *Var2 12`
  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 FFFFFFFC 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  Call  PlayEffect    ( ~FX:Sparkles:Star *Var0 *Var1 *Var2 *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  Wait 30`
  Call  UseBattleCamPreset    ( 00000002 )
  Wait 20`
  Call  UseIdleAnimation  ( *VarB .False )
  Call  EnableIdleScript  ( *VarB .False )
  Call  PlaySoundAtActor  ( .Actor:Self 000002D4 )
  Call  SetAnimation      ( *VarB 00000001 006B081D )
  Wait  15`
  Call  PlaySoundAtActor  ( .Actor:Self 000002D3 )
  Call  SetAnimation      ( *VarB 00000001 006B081F )
  Wait  40`
  Call  ActorSpeak        ( 002F000F *VarB 00000001 006B0808 006B0801 )
  % Call  SetAnimation  ( .Actor:Enemy1 00000001 006B001C )
  Call  SetActorVar   ( *VarB 9` 0` ) % Disable Tubba Blubba Attacks
  Call  SetActorVar   ( *VarB 4` 1` ) % Possessed
  Call  BindHandleEvent   ( *VarB $Script_HandleEvent_Dry_Blubba_Possessed )
  Call  SetIdleAnimations ( *VarB 00000001 $IdleAnimations_DryBlubba_Possessed )
  Call  SetDefenseTable   ( *VarB 00000001 $DefenseTable_Possessed )
  Call  SetTargetOffset   ( *VarB 00000001 -15` 75` )
  Call  UseIdleAnimation  ( *VarB .True )
  Call  EnableIdleScript  ( *VarB .True )
  Call  SetActorType  ( *VarB 000000D8 )
  Call  RemoveActor   ( .Actor:Self )
  Return
  End
}

#new:Script $Script_Transform_Into_Spirit {
  Call  UseIdleAnimation  ( .Actor:Self .False )
  Call  EnableIdleScript  ( .Actor:Self .False )
  Call  SetActorType  ( .Actor:Self 000000D7 )
  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_Necromancer_Spirit )
  Call  SetDefenseTable   ( .Actor:Self 00000002 $DefenseTable_Necromancer_Spirit )
  Call  SetTargetOffset   ( .Actor:Self 00000002  0`  0` )
  Call  UseBattleCamPreset    ( 0000000D )
  Call  BattleCamTargetActor  ( .Actor:Self )
  Call  SetAnimation  ( .Actor:Self 00000001 00EA0019 )
  Wait 10`
  Call  ActorSpeak        ( 002F0008 .Actor:Self 00000001 00EA0043 00EA0019 )
  Wait 5`
  ExecWait $Script_SwitchToBook
  Call  SetAnimation  ( .Actor:Self 00000001 00EA000E )
  Call  UseBattleCamPreset    ( 0000000E )
  Wait 5`
  Call  ActorSpeak        ( 002F0009 .Actor:Self 00000001 00EA0020 00EA000E )
  Call  UseBattleCamPreset    ( 0000000D )
  Call  $Function_Darken_Screen ( )
  Wait 4`
  Call  SetAnimation  ( .Actor:Self 00000001 00EA0017 )
  Call GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
  % Sub *Var0 18`
  Add *Var1 25`
  % Add *Var2 5`
  Call  PlayEffect    ( ~FX:GatherMagic:Dark *Var[0] *Var[1] *Var[2] *Fixed[2.0] 90` 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  % Call  PlaySoundAtActor  ( .Actor:Self 0000035A )
  Call  PlaySoundAtActor  ( .Actor:Self 000003EF )
  Thread
    Loop 2`
      Call  SetActorScale ( .Actor:Self *Fixed[1.05] *Fixed[0.95] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.9] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[1.05] *Fixed[0.95] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[0.95] *Fixed[1.05] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
      Wait 6`
    EndLoop
    Loop 2`
      Call  SetActorScale ( .Actor:Self *Fixed[1.05] *Fixed[0.95] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.9] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[1.2] *Fixed[0.8] *Fixed[1.0] )
      Wait 1`
      Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.9] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[1.05] *Fixed[0.95] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[0.95] *Fixed[1.05] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.1] *Fixed[1.0] )
      Wait 1`
      Call  SetActorScale ( .Actor:Self *Fixed[0.95] *Fixed[1.05] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
      Wait 4`
    EndLoop
    /%
    Loop 1`
      Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.9] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[1.2] *Fixed[0.8] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[1.4] *Fixed[0.6] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[1.2] *Fixed[0.8] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.9] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.1] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[0.8] *Fixed[1.2] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[0.9] *Fixed[1.1] *Fixed[1.0] )
      Wait 2`
      Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
      Wait 4`
    EndLoop
    %/
  EndThread
  Wait 20`
  Set *Var4 300`
  Loop 15`
    Sub *Var4 10`
    Call  SetPartAlpha  ( .Actor:Self 00000001 *Var4 )
    Wait 1`
  EndLoop
  Loop 5`
    Add *Var4 10`
    Call  SetPartAlpha  ( .Actor:Self 00000001 *Var4 )
    Wait 1`
  EndLoop
  Loop 10`
    Sub *Var4 10`
    Call  SetPartAlpha  ( .Actor:Self 00000001 *Var4 )
    Wait 1`
  EndLoop
  % Call  PlaySoundAtActor  ( .Actor:Self 000000D9 )
  Loop 5`
    Add *Var4 10`
    Call  SetPartAlpha  ( .Actor:Self 00000001 *Var4 )
    Wait 1`
  EndLoop
  Loop 15`
    Sub *Var4 10`
    Call  SetPartAlpha  ( .Actor:Self 00000001 *Var4 )
    Wait 1`
  EndLoop
  Wait 20`
  % Call  SetBattleCamZoom  (  150` )
  Wait 10`
  % Call  PlaySoundAtActor  ( .Actor:Self 000000DA )
  % Call  PlaySoundAtActor  ( .Actor:Self 0000015C )
  Call  PlaySoundAtActor  ( .Actor:Self 00000172 )
  Call  SetPartAlpha  ( .Actor:Self 00000001 300` )
  Call  SetAnimation  ( .Actor:Self 00000001 00EA003E )
  Wait 10`
  Call  SetAnimation  ( .Actor:Self 00000001 00EA003F )
  Call  $Function_Lighten_Screen ( )
  Wait 60`
  Call  ActorSpeak        ( 002F000A .Actor:Self 00000001 00EA0040 00EA003F )
  Wait 10`
  Call  UseBattleCamPreset    ( 00000002 )
  Wait 25`
  Call GetActorVar (.Actor:Self 16` *VarB )
  Call  UseIdleAnimation  ( *VarB .False )
  Call  EnableIdleScript  ( *VarB .False )
  Call  SetAnimation  ( *VarB 00000001 006B0022 )
  Wait 4`
  Call  SetAnimation  ( *VarB 00000001 006B001C )
  Call  PlaySoundAtActor  ( .Actor:Self 000002D2 )
  Wait 35`
  Call  UseBattleCamPreset    ( 0000000D )
  Wait 20`
  Call  ActorSpeak        ( 002F000E .Actor:Self 00000001 00EA0040 00EA003F )
  Call  SetActorVar   ( .Actor:Self 13` 3` ) % Phase: 1 = Phase 1. 2 = Phase 2, 3 = Phase 3.
  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_Necromancer_Spirit )
  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_Necromancer_Spirit )
  Call GetEnemyMaxHP (.Actor:Self *VarE)
  Call SetEnemyHP (.Actor:Self *VarE)
  Call  SetActorVar   ( *VarB 9` 1` ) % Disable Tubba Blubba Attacks
  Call  SetTargetOffset   ( *VarB 00000001  0`  20` )
  Call  SetIdleAnimations ( *VarB 00000001 $IdleAnimations_DryBlubba_Dead )
  Call  BindHandleEvent   ( *VarB $Script_HandleEvent_Dead_Blubba )
  Call  CancelEnemyTurn ( 00000001 )
  Call  UseIdleAnimation  ( .Actor:Self .True )
  Call  EnableIdleScript  ( .Actor:Self .True )
  Call  UseIdleAnimation  ( *VarB .True )
  Call  EnableIdleScript  ( *VarB .True )
  Return
  End
}

/%
#new:SpecialFormation $SpecialFormation_Spirit {
  $Spirit $Vector3D_SpiritPos 00000064 00000000 00000000 00000000 00000000
}
%/

#new:SpecialFormation $Specialformation_Drybones1 {
  $22_DryBones $Vector3D_DryBones1Pos 00000064 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $Specialformation_Drybones2 {
  $22_DryBones $Vector3D_DryBones2Pos 00000064 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $Specialformation_Drybones3 {
  $22_DryBones $Vector3D_DryBones3Pos 00000064 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $Specialformation_Drybones4 {
  $22_DryBones $Vector3D_DryBones4Pos 00000064 00000000 00000000 00000000 00000000
}

#new:SpecialFormation $Specialformation_DryTubbaBlubba {
  $0E_TubbaBlubba $Vector3D_DryTubbaBlubbaPos 00000064 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_SpiritPos {
  -100` 15` 2`
}

#new:Vector3D $Vector3D_DryBones1Pos {
  15` -50` 1`
}

#new:Vector3D $Vector3D_DryBones2Pos {
  95` -50` 1`
}

#new:Vector3D $Vector3D_DryBones3Pos {
  -15` -50` 0`
}

#new:Vector3D $Vector3D_DryBones4Pos {
  125` -50` 0`
}

#new:Vector3D $Vector3D_DryTubbaBlubbaPos {
  30` -100` -5`
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%     DRY TUBBA BLUBBA BPAT      %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

#new:Actor $0E_TubbaBlubba {
% stats
[Index]        D6b
[Level]         0`b
[MaxHP]        10`b
[Coins]         0`b
[Flags]       00000000
[StatusTable] $StatusTable_80225CA0_0E
% ai
[PartsCount]    1`s
[PartsTable]  $PartsTable_80225D4C_0E
[Script]      $Script_Init_80225D98_0E
% move effectiveness
[Escape]        0`b
[Item]          0`b
[AirLift]       0`b
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b
[PowerBounce]  75`b
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]        110`b 100`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -33`b  78`b % dx dy
[StatusIcon]   10`b  75`b % dx dy
}

#new:IdleAnimations $IdleAnimations_DryBlubba_Normal {
.Status:Normal    006B0001
.Status:Stone     006B0000
.Status:Sleep     006B0018
.Status:Poison    006B0001
.Status:Stop      006B0000
.Status:Static    006B0000
.Status:Paralyze  006B0000
.Status:Paralyze  006B0000
.Status:Dizzy     006B0018
.Status:Fear      006B0000
.Status:End
}

#new:IdleAnimations $IdleAnimations_DryBlubba_Dead {
.Status:Normal    006B001C
.Status:Stone     006B001C
.Status:Sleep     006B001C
.Status:Poison    006B001C
.Status:Stop      006B001C
.Status:Static    006B001C
.Status:Paralyze  006B001C
.Status:Paralyze  006B001C
.Status:Dizzy     006B001C
.Status:Fear      006B001C
.Status:End
}

#new:IdleAnimations $IdleAnimations_DryBlubba_Possessed {
.Status:Normal    006B0801
.Status:Stone     006B0800
.Status:Sleep     006B0818
.Status:Poison    006B0801
.Status:Stop      006B0800
.Status:Static    006B0800
.Status:Paralyze  006B0800
.Status:Paralyze  006B0800
.Status:Dizzy     006B0818
.Status:Fear      006B0800
.Status:End
}

#new:DefenseTable $DefenseTable_80225C94_0E {
.Element:Normal 99`
.Element:End
}

#new:DefenseTable $DefenseTable_Possessed {
.Element:Normal 00000002
.Element:Fire   FFFFFFF6
.Element:Blast  FFFFFFF6
.Element:End
}

#new:StatusTable $StatusTable_80225CA0_0E {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_80225D4C_0E {
  00800000 01000000 F14B00FF $IdleAnimations_DryBlubba_Normal $DefenseTable_80225C94_0E 00000000 00000000 00F60000 00000000
}

#new:Script $Script_Init_80225D98_0E {
  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802264AC_0E )
  Call  BindIdle      ( .Actor:Self $Script_Idle_80225F58_0E )
  Call  BindNextTurn      ( .Actor:Self $Script_NextTurn_DryBlubba )
  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802260D0_0E )
  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
  Call  SetActorVar   ( .Actor:Self 3` 0` )
  Call  SetActorVar   ( .Actor:Self 4` 0` ) % Possessed
  Call  SetActorVar   ( .Actor:Self 9` 0` ) % Disable Tubba Blubba Attacks
  Call  SetActorVar   ( .Actor:Self 10` 0` ) % Reanimate Blubba 1 = reanimate
  % Exec  $Script_80225E08_0E
  Return
  End
}

#new:Script $Script_NextTurn_DryBlubba {
  Call GetActorVar ( .Actor:Self 3` *Var0 )
  If *Var0 == 0`
    Call  PlaySoundAtActor  ( .Actor:Self 0000028E )
    Call  UseIdleAnimation  ( .Actor:Player .False )
    Call  EnableIdleScript  ( .Actor:Player .False )
    Call  SetAnimation      ( .Actor:Player 00000000 0001002B )
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self .False )
    Call  GetActorVar   ( .Actor:Self 4` *Var8 ) % Possessed
    If *Var8 == 0`
      Call  SetAnimation      ( .Actor:Self 00000001 006B001C )
    Else
      Call  SetAnimation      ( .Actor:Self 00000001 006B081C )
    EndIf
    Wait 10`
    % Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000060 00000008 00000030 0000001E 00000000 00000000 00000000 00000000 00000000 )
    Thread
      Call  ShakeCam  ( .Cam:Battle 00000000 00000010 *Fixed[7.5] )
      Call  ShakeCam  ( .Cam:Battle 00000000 00000040 *Fixed[5.0] )
      Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[4.0] )
      Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[3.0] )
      Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[1.0] )
      Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[0.5] )
      Call  UseIdleAnimation  ( .Actor:Player .True )
      Call  EnableIdleScript  ( .Actor:Player .True )
    EndThread
    Call SetActorSpeed ( .Actor:Self *Fixed[2.0] )
    Call SetActorJumpGravity ( .Actor:Self *Fixed[0.1] )
    Call GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
    Wait 10`
    Add   *Var1  100`
    Thread
      Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
      Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
      Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
      Wait  2`
      Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
      Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000030 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
      Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
      Wait  2`
      Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
      Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
      Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
      Wait  2`
      Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
      Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
      Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
    EndThread
    Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  FlyToGoal     ( .Actor:Self  60`  0` .Easing:Linear )
    Wait 60`
    Call  PlaySoundAtActor  ( .Actor:Self 000002D4 )
    Call  GetActorVar   ( .Actor:Self 4` *Var8 ) % Possessed
    If *Var8 == 0`
      Call  SetAnimation      ( .Actor:Self 00000001 006B001D )
    Else
      Call  SetAnimation      ( .Actor:Self 00000001 006B081D )
    EndIf
    Wait  15`
    Call  PlaySoundAtActor  ( .Actor:Self 000002D3 )
    Call  GetActorVar   ( .Actor:Self 4` *Var8 ) % Possessed
    If *Var8 == 0`
      Call  SetAnimation      ( .Actor:Self 00000001 006B001F )
    Else
      Call  SetAnimation      ( .Actor:Self 00000001 006B081F )
    EndIf
    Wait  20`
    Wait 4`
    Call GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  HPBarToHome   ( .Actor:Self )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Call  EnableIdleScript  ( .Actor:Self .True )
    Call SetActorVar (.Actor:Self 3` 1`)
    Set *VarD 00000200
    Loop 4`
      Add *VarD 1`
      Call  ActorExists   ( *VarD *Var1 )
      If *Var1 == .True
        Call SetActorVar (.Actor:Enemy0 16` *VarD) % Dry Blubba Actor ID
      EndIf
    EndLoop
  EndIf
  Return
  End
}

#new:Script $Script_80225E08_0E {
  Label  0
  Wait  1`
  Call  ActorExists   ( .Actor:Self *Var0 )
  If  *Var0  ==  .False
   	Return
  EndIf
  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   	Goto  0
  EndIf
  Call  GetAnimation  ( .Actor:Self 00000001 *Var0 )
  If  *Var0  ==  006B0006
   	Goto  1
  EndIf
  If  *Var0  ==  006B0007
   	Goto  1
  EndIf
  Goto  0
  Label  1
  Call  StartRumble   ( 00000001 )
  Call  ShakeCam      ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  Wait  1`
  Goto  0
  Return
  End
}

#new:Script $Script_Idle_80225F58_0E {
  Label  0
  Wait  1`
  Goto  0
  Return
  End
}

#new:Script $Script_80225F8C_0E {
  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  If  *Var0  ==  00000000
   	Return
  EndIf
  Return
  End
}

#new:Script $Script_80225FD4_0E {
  Call  GetActorVar   ( .Actor:Self 4` *Var8 ) % Possessed
  If *Var8 == 0`
    Set   *Var1  006B0001
  Else
    Set   *Var1  006B0801
  EndIf
  ExecWait  $Script_80225F8C_0E
  Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  Call  SetGoalToHome ( .Actor:Self )
  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  If *Var8 == 0`
    Set   *Var1  006B0006
  Else
    Set   *Var1  006B0806
  EndIf
  ExecWait  $Script_80225F8C_0E
  Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  Call  RunToGoal     ( .Actor:Self  0` .False )
  If *Var8 == 0`
    Set   *Var1  006B0001
  Else
    Set   *Var1  006B0801
  EndIf
  ExecWait  $Script_80225F8C_0E
  Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  Call  SetActorYaw   ( .Actor:Self  0` )
  Return
  End
}

#new:Script $Script_HandleEvent_802260D0_0E {
  Call  UseIdleAnimation  ( .Actor:Self .False )
  Call  EnableIdleScript  ( .Actor:Self .False )
  Call  GetLastEvent      ( .Actor:Self *VarA )
  Switch  *VarA
      CaseOR  ==  .Event:HitCombo % 9
      CaseOR  ==  .Event:Hit % A
        SetConst  *Var0  00000001
        SetConst  *Var1  006B0014
        ExecWait  DoNormalHit
      EndCaseGroup
      Case  ==  .Event:BurnHit % E
        SetConst  *Var0  00000001
        SetConst  *Var1  006B0014
        SetConst  *Var2  FFFFFFFF
        ExecWait  DoBurnHit
      Case  ==  .Event:BurnDeath % 24
        SetConst  *Var0  00000001
        SetConst  *Var1  006B0014
        SetConst  *Var2  FFFFFFFF
        ExecWait  DoBurnHit
        %	ExecWait  $Script_TubbaBlubba_Killed_Fire
        Return
      Case  ==  .Event:SpinSmashHit % B
        SetConst  *Var0  00000001
        SetConst  *Var1  006B0014
        ExecWait  DoSpinSmashHit
      Case  ==  .Event:ShockHit % 2F
        Call  UseBattleCamPreset    ( 00000002 )
        Call  MoveBattleCamOver     (  20` )
        SetConst  *Var0  00000001
        SetConst  *Var1  006B0014
        ExecWait  DoShockHit
        SetConst  *Var0  00000001
        SetConst  *Var1  006B0014
        ExecWait  DoJumpBack
        ExecWait  $Script_80225FD4_0E
      CaseOR  ==  00000017 % 17
      CaseOR  ==  .Event:Immune % 19
      CaseOR  ==  .Event:AirLiftFailed % 1F
        SetConst  *Var0  00000001
        SetConst  *Var1  006B0001
        ExecWait  DoImmune
      EndCaseGroup
      Case  ==  .Event:ShockDeath % 26
        Call  UseBattleCamPreset    ( 00000002 )
        Call  MoveBattleCamOver     (  20` )
        SetConst  *Var0  00000001
        SetConst  *Var1  006B0014
        ExecWait  DoShockHit
        %	ExecWait  $Script_TubbaBlubba_Killed_No_Fire
        Return
      Case  ==  .Event:Death % 20
        SetConst  *Var0  00000001
        SetConst  *Var1  006B0014
        ExecWait  DoNormalHit
        %	ExecWait  $Script_TubbaBlubba_Killed_No_Fire
        Return
    Case  ==  .Event:SpinSmashDeath % 21
      SetConst  *Var0  00000001
      SetConst  *Var1  006B0014
      ExecWait  DoSpinSmashHit
      %	ExecWait  $Script_TubbaBlubba_Killed_No_Fire
      Return
    Case  ==  .Event:RecoverStatus % 31
      SetConst  *Var0  00000001
      SetConst  *Var1  006B0001
      ExecWait  DoRecover
    Default
  EndSwitch
  Call  EnableIdleScript  ( .Actor:Self .True )
  Call  UseIdleAnimation  ( .Actor:Self .True )
  Return
  End
}

#new:Script $Script_HandleEvent_Dead_Blubba {
  % Call  UseIdleAnimation  ( .Actor:Self .False )
  % Call  EnableIdleScript  ( .Actor:Self .False )
  Call  GetLastEvent      ( .Actor:Self *VarA )
  Switch  *VarA
   	CaseOR  ==  .Event:HitCombo % 9
   	CaseOR  ==  .Event:Hit % A
    	SetConst  *Var0  00000001
  		SetConst  *Var1  006B001C
 		  ExecWait  DoNormalHit
    EndCaseGroup
    Case  ==  .Event:BurnHit % E
     	SetConst  *Var0  00000001
  		SetConst  *Var1  006B001C
  		SetConst  *Var2  FFFFFFFF
   		ExecWait  DoBurnHit
   	Case  ==  .Event:BurnDeath % 24
   		SetConst  *Var0  00000001
   		SetConst  *Var1  006B001C
   		SetConst  *Var2  FFFFFFFF
   		ExecWait  DoBurnHit
      % ExecWait  $Script_TubbaBlubba_Killed_Fire
  		Return
   	Case  ==  .Event:SpinSmashHit % B
   		SetConst  *Var0  00000001
   		SetConst  *Var1  006B001C
   		ExecWait  DoSpinSmashHit
   	Case  ==  .Event:ShockHit % 2F
   		Call  UseBattleCamPreset    ( 00000002 )
   		Call  MoveBattleCamOver     (  20` )
   		SetConst  *Var0  00000001
   		SetConst  *Var1  006B001C
   		ExecWait  DoShockHit
   		SetConst  *Var0  00000001
   		SetConst  *Var1  006B001C
   		ExecWait  DoJumpBack
   		ExecWait  $Script_80225FD4_0E
   	CaseOR  ==  00000017 % 17
   	CaseOR  ==  .Event:Immune % 19
   	CaseOR  ==  .Event:AirLiftFailed % 1F
   		SetConst  *Var0  00000001
   		SetConst  *Var1  006B0001
   		ExecWait  DoImmune
   	EndCaseGroup
   	Case  ==  .Event:ShockDeath % 26
   		Call  UseBattleCamPreset    ( 00000002 )
   		Call  MoveBattleCamOver     (  20` )
   		SetConst  *Var0  00000001
   		SetConst  *Var1  006B001C
   		ExecWait  DoShockHit
      %	ExecWait  $Script_TubbaBlubba_Killed_No_Fire
  		Return
   	Case  ==  .Event:Death % 20
   		SetConst  *Var0  00000001
   		SetConst  *Var1  006B001C
   		ExecWait  DoNormalHit
      %	ExecWait  $Script_TubbaBlubba_Killed_No_Fire
  		Return
   	Case  ==  .Event:SpinSmashDeath % 21
  		SetConst  *Var0  00000001
   		SetConst  *Var1  006B001C
   		ExecWait  DoSpinSmashHit
      % ExecWait  $Script_TubbaBlubba_Killed_No_Fire
  		Return
   	Case  ==  .Event:RecoverStatus % 31
   		SetConst  *Var0  00000001
   		SetConst  *Var1  006B0001
   		ExecWait  DoRecover
   	Default
  EndSwitch
  % Call  EnableIdleScript  ( .Actor:Self .True )
  % Call  UseIdleAnimation  ( .Actor:Self .True )
  Return
  End
}

#new:Script $Script_HandleEvent_Dry_Blubba_Possessed {
  Call  UseIdleAnimation  ( .Actor:Self .False )
  Call  EnableIdleScript  ( .Actor:Self .False )
  Call  GetLastEvent      ( .Actor:Self *VarA )
  Switch  *VarA
  	CaseOR  ==  .Event:HitCombo % 9
   	CaseOR  ==  .Event:Hit % A
   		SetConst  *Var0  00000001
   		SetConst  *Var1  006B0814
   		ExecWait  DoNormalHit
    EndCaseGroup
    Case  ==  .Event:BurnHit % E
      SetConst  *Var0  00000001
      SetConst  *Var1  006B0B14
   	  SetConst  *Var2  FFFFFFFF
   		ExecWait  DoBurnHit
   	Case  ==  .Event:BurnDeath % 24
   		SetConst  *Var0  00000001
   		SetConst  *Var1  006B0B14
   		SetConst  *Var2  FFFFFFFF
   		ExecWait  DoBurnHit
   		ExecWait  $Script_TubbaBlubba_Killed_Fire
   		Return
   	Case  ==  .Event:SpinSmashHit % B
   		SetConst  *Var0  00000001
   		SetConst  *Var1  006B0814
   		ExecWait  DoSpinSmashHit
   	Case  ==  .Event:ShockHit % 2F
   		Call  UseBattleCamPreset    ( 00000002 )
   		Call  MoveBattleCamOver     (  20` )
   		SetConst  *Var0  00000001
   		SetConst  *Var1  006B0814
   		ExecWait  DoShockHit
   		SetConst  *Var0  00000001
   		SetConst  *Var1  006B0814
   		ExecWait  DoJumpBack
   		ExecWait  $Script_80225FD4_0E
   	CaseOR  ==  00000017 % 17
   	CaseOR  ==  .Event:Immune % 19
   	CaseOR  ==  .Event:AirLiftFailed % 1F
   		SetConst  *Var0  00000001
   		SetConst  *Var1  006B0801
   		ExecWait  DoImmune
   	EndCaseGroup
   	Case  ==  .Event:ShockDeath % 26
   		Call  UseBattleCamPreset    ( 00000002 )
   		Call  MoveBattleCamOver     (  20` )
   		SetConst  *Var0  00000001
   		SetConst  *Var1  006B0814
   		ExecWait  DoShockHit
   		ExecWait  $Script_TubbaBlubba_Killed_No_Fire
   		Return
   	Case  ==  .Event:Death % 20
   		SetConst  *Var0  00000001
   		SetConst  *Var1  006B0814
   		ExecWait  DoNormalHit
   		ExecWait  $Script_TubbaBlubba_Killed_No_Fire
   		Return
   	Case  ==  .Event:SpinSmashDeath % 21
  		SetConst  *Var0  00000001
   		SetConst  *Var1  006B0814
   		ExecWait  DoSpinSmashHit
   		ExecWait  $Script_TubbaBlubba_Killed_No_Fire
   		Return
   	Case  ==  .Event:RecoverStatus % 31
   		SetConst  *Var0  00000001
   		SetConst  *Var1  006B0801
   		ExecWait  DoRecover
   	Default
  EndSwitch
  Call  EnableIdleScript  ( .Actor:Self .True )
  Call  UseIdleAnimation  ( .Actor:Self .True )
  Return
  End
}

#new:Script $Script_TakeTurn_802264AC_0E {
  Call  GetActorVar   ( .Actor:Self 9` *Var0 ) % Disable Tubba Blubba Attacks
  If *Var0 == 1`
    Return
  EndIf
  Call  UseIdleAnimation  ( .Actor:Self .False )
  Call  EnableIdleScript  ( .Actor:Self .False )
  Call  GetActorVar   ( .Actor:Self 10` *Var0 ) % Reanimate Blubba
  If *Var0 == 1`
    Call  PlaySoundAtActor  ( .Actor:Self 000002D4 )
    Call  SetAnimation      ( .Actor:Self 00000001 006B081D )
    Wait  15`
    Call  PlaySoundAtActor  ( .Actor:Self 000002D3 )
    Call  SetAnimation      ( .Actor:Self 00000001 006B081F )
    Wait  24`
    Call  SetActorVar   ( .Actor:Self 10` 0` ) % Reanimate Blubba
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_Dry_Blubba_Possessed )
    Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_DryBlubba_Possessed )
    Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_Possessed )
    Call  SetTargetOffset   ( .Actor:Self 00000001  -15`  75` )
    Call GetEnemyMaxHP (.Actor:Self *Var0)
    Call SetEnemyHP (.Actor:Self *Var0)
  EndIf
  Call  RandInt   ( 00000064 *Var0 )
  If  *Var0  <  0000003C
   	ExecWait  $Script_80226558_0E
  Else
   	ExecWait  $Script_80226B88_0E
  EndIf
  Call  EnableIdleScript  ( .Actor:Self .True )
  Call  UseIdleAnimation  ( .Actor:Self .True )
  Return
  End
}

#new:Script $Script_80226558_0E {
  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  Call  UseBattleCamPreset    ( 0000003F )
  Call  SetBattleCamZoom  (  150` )
  Call  BattleCamTargetActor  ( .Actor:Self )
  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  Call  GetActorVar   ( .Actor:Self 4` *Var8 ) %Possessed
  If *Var8 == 0`
    Set   *Var1  006B0006
  Else
    Set   *Var1  006B0806
  EndIf
  ExecWait  $Script_80225F8C_0E
  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  Call  SetGoalToTarget   ( .Actor:Self )
  Call  GetStatusFlags    ( .Actor:Self *Var5 )
  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
   	Call  AddGoalPos    ( .Actor:Self  50`  0`  0` )
  Else
   	Call  AddGoalPos    ( .Actor:Self  20`  0`  0` )
  EndIf
  Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  Call  RunToGoal     ( .Actor:Self  0` .False )
  If *Var8 == 0`
    Call  SetAnimation  ( .Actor:Self 00000001 006B0015 )
  Else
    Call  SetAnimation  ( .Actor:Self 00000001 006B0815 )
  EndIf
  Wait  8`
  Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
  If *Var8 == 0`
    Call  SetAnimation  ( .Actor:Self 00000001 006B0016 )
  Else
    Call  SetAnimation  ( .Actor:Self 00000001 006B0816 )
  EndIf
  Wait  20`
  If *Var8 == 0`
    Call  SetAnimation  ( .Actor:Self 00000001 006B0017 )
  Else
    Call  SetAnimation  ( .Actor:Self 00000001 006B0817 )
  EndIf
  Wait  3`
  Call  SetGoalToTarget   ( .Actor:Self )
  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   	Set   *Var1  00000000
   	Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   	Thread
   		Call  StartRumble   ( 00000001 )
   		Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[15.0] )
   	EndThread
   	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
  EndIf
  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  Switch  *VarA
    CaseOR  ==  .HitResult:Miss % 6
  	CaseOR  ==  .HitResult:Lucky % 5
      Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
      Call  PlayEffect        ( ~FX:ShockWave:White *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
      Wait  30`
      If *Var8 == 0`
        Set   *Var1  006B0001
      Else
        Set   *Var1  006B0801
      EndIf
   		ExecWait  $Script_80225F8C_0E
   		Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  		Call  UseBattleCamPreset    ( 00000002 )
   		Call  MoveBattleCamOver (  20` )
   		If  *VarA  ==  00000005
    		Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
   		EndIf
  		ExecWait  $Script_80225FD4_0E
      Return
  	EndCaseGroup
    Default
  EndSwitch
  Call  GetStatusFlags    ( .Actor:Self *Var5 )
  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
   	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   	Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  EndIf
  Wait  2`
  Call  SetGoalToTarget   ( .Actor:Self )
  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
    Call  80269EAC  ( 00000017 )
  EndIf
  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  Call  UseBattleCamPreset    ( 0000003F )
  Call  SetBattleCamZoom  (  200` )
  Call  BattleCamTargetActor  ( .Actor:Self )
  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  Call  MoveBattleCamOver (  30` )
  Switch  *VarF
    CaseOR  ==  .HitResult:Hit % 0
    CaseOR  ==  .HitResult:QuakeImmune % 2
      Wait  30`
      If *Var8 == 0`
        Set   *Var1  006B0001
      Else
        Set   *Var1  006B0801
      EndIf
   		ExecWait  $Script_80225F8C_0E
   		Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
   		Call  UseBattleCamPreset    ( 00000002 )
   		Call  MoveBattleCamOver     (  20` )
   		Call  YieldTurn ( )
  		ExecWait  $Script_80225FD4_0E
    EndCaseGroup
  EndSwitch
  Return
  End
}

#new:Script $Script_80226B88_0E {
  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  Call  UseBattleCamPreset    ( 0000003F )
  Call  SetBattleCamZoom  (  150` )
  Call  BattleCamTargetActor  ( .Actor:Self )
  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  Call  GetActorVar   ( .Actor:Self 4` *Var8 ) %Possessed
  If *Var8 == 0`
    Set   *Var1  006B0006
  Else
    Set   *Var1  006B0806
  EndIf
  ExecWait  $Script_80225F8C_0E
  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  Call  SetGoalToTarget   ( .Actor:Self )
  Call  AddGoalPos        ( .Actor:Self  70`  0`  0` )
  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  Call  RunToGoal ( .Actor:Self  0` .False )
  If *Var8 == 0`
    Call  SetAnimation      ( .Actor:Self 00000001 006B000A )
  Else
    Call  SetAnimation      ( .Actor:Self 00000001 006B080A )
  EndIf
  Wait  8`
  If *Var8 == 0`
    Call  SetAnimation      ( .Actor:Self 00000001 006B000B )
  Else
    Call  SetAnimation      ( .Actor:Self 00000001 006B080B )
  EndIf
  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000003E7 00000000 )
  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  Switch  *Var0
  	CaseOR  ==  .HitResult:Miss % 6
  	CaseOR  ==  .HitResult:Lucky % 5
  		Set   *VarA  *Var0
      Thread
  			Wait  12`
        If *Var8 == 0`
  			  Call  SetAnimation  ( .Actor:Self 00000001 006B000C )
        Else
    			Call  SetAnimation  ( .Actor:Self 00000001 006B080C )
        EndIf
  		EndThread
  		Call  SetGoalToTarget       ( .Actor:Self )
  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  		Sub   *Var0  0000000F
  		Set   *Var1  00000000
  		Add   *Var2  00000005
  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  		Call  JumpToGoal    ( .Actor:Self  23` .False .True .False )
  		Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
 		  Call  PlayEffect    ( ~FX:ShockWave:White *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
      If *Var8 == 0`
  		  Call  SetAnimation  ( .Actor:Self 00000001 006B000D )
      Else
    		Call  SetAnimation  ( .Actor:Self 00000001 006B080D )
      EndIf
  		Thread
  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  			Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  		EndThread
  		Thread
  			Call  StartRumble   ( 00000001 )
  			Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  		EndThread
  		Call  ResetActorSounds      ( .Actor:Self .ActorSound:Jump )
  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  		Sub   *Var0  00000014
  		Set   *Var1  00000000
  		Add   *Var2  00000005
  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  		Call  StartRumble   ( 00000001 )
   		Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  		Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  		If  *VarA  ==  .HitResult:Lucky % 5
  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  		EndIf
  		Call  UseBattleCamPreset    ( 00000002 )
 		Call  MoveBattleCamOver     (  20` )
 		Wait  8`
    If *Var8 == 0`
  		Call  SetAnimation  ( .Actor:Self 00000001 006B000E )
    Else
    	Call  SetAnimation  ( .Actor:Self 00000001 006B080E )
    EndIf
  		Wait  4`
  		ExecWait  $Script_80225FD4_0E
  		Return
  	EndCaseGroup
    Default
  	  Thread
  			Wait  9`
        If *Var8 == 0`
  			  Call  SetAnimation  ( .Actor:Self 00000001 006B000C )
        Else
    			Call  SetAnimation  ( .Actor:Self 00000001 006B080C )
        EndIf
  		EndThread
  		Call  SetGoalToTarget       ( .Actor:Self )
  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  EndSwitch
  Wait  2`
  Call  SetGoalToTarget   ( .Actor:Self )
  Call  GetStatusFlags    ( .Actor:Self *Var5 )
  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  	Call  80269EAC  ( 00000018 )
  	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
  EndIf
  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 00000006 00000020 )
  Call  UseBattleCamPreset    ( 0000003F )
  Call  SetBattleCamZoom  (  200` )
  Call  BattleCamTargetActor  ( .Actor:Self )
  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  Call  MoveBattleCamOver (  30` )
  Switch  *VarF
  	CaseOR  ==  .HitResult:Hit % 0
  	CaseOR  ==  .HitResult:QuakeImmune % 2
  		Call  GetStatusFlags    ( .Actor:Self *Var5 )
  		If  *Var5  &  ~Flags:StatusFlags:Shrink % 80000
  			Goto  1
  		EndIf
  		Call  GetBattleFlags    ( *Var0 )
  		If  *Var0  !&  80000000
  			Call  GetStatusFlags    ( .Actor:Player *Var0 )
  			If  *Var0  !&  ~Flags:StatusFlags:Stone % 100000
  				Call  LandJump  ( .Actor:Self )
  			Else
  				Goto  1
  			EndIf
  		Else
  			Goto  1
  		EndIf
  		Label  0
  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  		Call  PlayEffect    ( ~FX:ShockWave:White *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
      If *Var8 == 0`
  		  Call  SetAnimation  ( .Actor:Self 00000001 006B000D )
      Else
    		Call  SetAnimation  ( .Actor:Self 00000001 006B080D )
      EndIf
  		Thread
  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  			Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  		EndThread
  		Thread
  			Call  StartRumble   ( 00000001 )
  			Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  		EndThread
  		Call  ResetActorSounds      ( .Actor:Self .ActorSound:Jump )
  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  		Sub   *Var0  00000014
  		Set   *Var1  00000000
  		Add   *Var2  00000005
  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  		Call  StartRumble   ( 00000001 )
  		Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  		Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  		Goto  2
  		Label  1
  		Call  GetStatusFlags        ( .Actor:Self *Var5 )
  		If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  			Wait  3`
  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  			Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  			Call  StartRumble   ( 00000001 )
  			Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  		EndIf
  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   		Add   *Var0  00000028
  		Set   *Var1  00000000
  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  		Thread
  			Wait  8`
        If *Var8 == 0`
  			  Call  SetAnimation  ( .Actor:Self 00000001 006B000E )
        Else
    			Call  SetAnimation  ( .Actor:Self 00000001 006B080E )
        EndIf
  		EndThread
  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  		If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  			Call  StartRumble   ( 00000001 )
  			Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  			Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  			Wait  8`
  		EndIf
  		Label  2
  		Call  UseBattleCamPreset    ( 00000002 )
  		Call  MoveBattleCamOver     (  20` )
  		Call  YieldTurn ( )
   		ExecWait  $Script_80225FD4_0E
  	EndCaseGroup
  EndSwitch
  Return
  End
}

#new:Script $Script_TubbaBlubba_Killed_Fire {
  Call  SetAnimation  ( .Actor:Self 00000001 006B0B14 )
  Call  ActorSpeak    ( 002F000D .Actor:Self 00000001 006B0B14 006B0B14 ) % Eeeeoooow!!
  Set   *Var0  00000001
  Set   *Var1  006B0B14
  ExecWait  DoDeath
  Return
  End
}

#new:Script $Script_TubbaBlubba_Killed_No_Fire {
  Call  SetAnimation  ( .Actor:Self 00000001 006B0022 )
  Wait 4`
  Call  SetAnimation  ( .Actor:Self 00000001 006B001C )
  Call  PlaySoundAtActor  ( .Actor:Self 000002D2 )
  Wait 35`
  Call  SetActorVar   ( .Actor:Self 10` 1` ) % Reanimate Blubba
  Call  SetTargetOffset   ( .Actor:Self 00000001  0`  20` )
  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_DryBlubba_Dead )
  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_Dead_Blubba )
  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80225C94_0E )
  % ExecWait  DoDeath
  Return
  End
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%      SPIRIT  BPAT       %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

#new:Actor $Spirit {
% stats
[Index]        D5b
[Level]         0`b
[MaxHP]         8`b
[Coins]         1`b
[Flags]       00000200
[StatusTable] $StatusTable_Spirit
% ai
[PartsCount]    2`s
[PartsTable]  $PartsTable_Spirit
[Script]      $Script_Init_Spirit
% move effectiveness
[Escape]        0`b
[Item]          0`b
[AirLift]       0`b
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]    100`b
[PowerBounce]  95`b
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  24`b % width height
[HealthBar]     3`b   1`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:IdleAnimations $IdleAnimations_Spirit {
.Status:Normal    00EA0014
.Status:Stone     00EA0014
.Status:Sleep     00EA0014
.Status:Poison    00EA0014
.Status:Stop      00EA0014
.Status:Static    00EA0014
.Status:Paralyze  00EA0014
.Status:Dizzy     00EA0014
.Status:Fear      00EA0014
.Status:End
}

#new:DefenseTable $DefenseTable_Spirit {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_Spirit {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_Spirit {
  00020000 01000000 000000FF $IdleAnimations_Spirit $DefenseTable_Spirit 00000000 00000000 00000000 00000000
  00800001 02001F00 00F800FF $IdleAnimations_Spirit $DefenseTable_Spirit 00000000 00000000 00F20000 00000000
}

#new:Script $Script_Init_Spirit {
  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_Spirit )
  Call  BindIdle      ( .Actor:Self $Script_Idle_Spirit )
  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_Spirit )
  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_Spirit )
  Call  UseIdleAnimation  ( .Actor:Self .False )
  Call  EnableIdleScript  ( .Actor:Self .False )
  Thread
    Set *Var3 0`
      Loop 20`
          Add *Var3 8`
          Call  SetPartAlpha  ( .Actor:Self 00000001 *Var3 )
          Wait 1`
      EndLoop
  EndThread
  Wait 45`
  Call  SetAnimation  ( .Actor:Self 00000001 00EA0015 )
  Wait 36`
  Call SetActorSpeed ( .Actor:Self *Fixed[2.0] )
  Call SetActorJumpGravity ( .Actor:Self *Fixed[0.1] )
  Call GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
  Add   *Var0  195`
  Add   *Var1  35`
  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  Call  FlyToGoal     ( .Actor:Self  0`  6` .Easing:Linear )
  Wait  4`
  Call  GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
  Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  Call  HPBarToHome   ( .Actor:Self )
  Call  EnableIdleScript  ( .Actor:Self .True )
  Call  UseIdleAnimation  ( .Actor:Self .True )
  Return
  End
}

#new:Script $Script_Idle_Spirit {
  Label  A
    Set *VarE 160`
    Loop 10`
      Sub *VarE 3`
      Call  SetPartAlpha  ( .Actor:Self 00000001 *VarE )
      Wait 1`
    EndLoop
    Call  RandInt   ( 5` *Var0 )
    Add *Var0 2`
    Wait *Var0
    Loop 10`
      Add *VarE 3`
      Call  SetPartAlpha  ( .Actor:Self 00000001 *VarE )
      Wait 1`
    EndLoop
    Call  RandInt   ( 7` *Var0 )
    Add *Var0 5`
    Wait *Var0
  Goto  A
  Return
  End
}

#new:Script $Script_NextTurn_Spirit {
  Return
  End
}

#new:Script $Script_TakeTurn_Spirit {
  Call  UseIdleAnimation  ( .Actor:Self .False )
  Call  EnableIdleScript  ( .Actor:Self .False )
  Call  EnableIdleScript  ( .Actor:Self .True )
  Call  UseIdleAnimation  ( .Actor:Self .True )
  Return
  End
}

#new:Script $Script_HandleEvent_Spirit {
  Call  UseIdleAnimation  ( .Actor:Self .False )
  Call  EnableIdleScript  ( .Actor:Self .False )
  Call  GetLastEvent      ( .Actor:Self *Var[0] )
  Switch  *Var[0]
  	CaseOR  ==  .Event:HitCombo % 9
  	CaseOR  ==  .Event:Hit % A
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0027
  		ExecWait  DoNormalHit
  	EndCaseGroup
  	Case  ==  .Event:BurnHit % E
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0014
  		SetConst  *Var[2]  FFFFFFFF
  		ExecWait  DoBurnHit
  	Case  ==  .Event:BurnDeath % 24
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0014
  		SetConst  *Var[2]  FFFFFFFF
  		ExecWait  DoBurnHit
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0014
  		ExecWait  DoDeath
  		Return
  	CaseOR  ==  00000017 % 17
  	CaseOR  ==  .Event:Immune % 19
  	CaseOR  ==  .Event:AirLiftFailed % 1F
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0027
  		ExecWait  DoImmune
  	EndCaseGroup
  	Case  ==  .Event:Death % 20
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0027
  		ExecWait  DoNormalHit
  		Wait  10`
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0027
  		ExecWait  DoDeath
  		Return
  	Case  ==  .Event:RecoverStatus % 31
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0027
   		ExecWait  DoRecover
  	Case  ==  .Event:BeginAirLift % 3A
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0027
  		ExecWait  DoAirLift
  	Case  ==  .Event:BlowAway % 16
  		SetConst  *Var[0]  00000001
  		SetConst  *Var[1]  00EA0027
  		ExecWait  DoBlowAway
  		Return
  	Default
  EndSwitch
  Call  EnableIdleScript  ( .Actor:Self .True )
  Call  UseIdleAnimation  ( .Actor:Self .True )
  Return
  End
}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%     DRY BONES BPAT      %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

#new:Actor $22_DryBones {
% stats
[Index]        47b
[Level]        30`b
[MaxHP]         8`b
[Coins]         1`b
[Flags]       00000000
[StatusTable] $StatusTable_8021CABC_22
% ai
[PartsCount]    2`s
[PartsTable]  $PartsTable_8021CC14_22
[Script]      $Script_Init_8021CC84_22
% move effectiveness
[Escape]       50`b
[Item]         10`b
[AirLift]      75`b
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b
[PowerBounce]  95`b
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b  15`b % dx dy
[StatusIcon]    3`b  27`b % dx dy
  }

#new:IdleAnimations $IdleAnimations_8021CA20_22 {
.Status:Normal    00530002
.Status:Stone     00530000
.Status:Sleep     0053000E
.Status:Poison    00530002
.Status:Stop      00530000
.Status:Static    00530002
.Status:Paralyze  00530000
.Status:Dizzy     0053000D
.Status:Fear      0053000D
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021CA6C_22 {
.Status:Normal    00530001
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021CA78_22 {
.Status:Normal    0053000F
.Status:End
}

#new:DefenseTable $DefenseTable_8021CA84_22 {
.Element:Normal 00000002
.Element:Fire   FFFFFFF6
.Element:Blast  FFFFFFF6
.Element:Shock  100`
.Element:Water  100`
.Element:Ice  100`
.Element:End
}

#new:DefenseTable $DefenseTable_8021CAA0_22 {
.Element:Normal 00000063
.Element:Fire   FFFFFFF6
.Element:Blast  FFFFFFF6
.Element:Shock  100`
.Element:Water  100`
.Element:Ice  100`
.Element:End
}

#new:StatusTable $StatusTable_8021CABC_22 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   50`
.Status:Shrink     60`
.Status:Stop       85`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End
}

#new:StatusTable $StatusTable_8021CB68_22 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_8021CC14_22 {
00800000 01000000 F81E00FF $IdleAnimations_8021CA20_22 $DefenseTable_8021CA84_22 00000000 00000000 FFF60000 00000000
00120001 02000000 000000FF $IdleAnimations_8021CA78_22 $DefenseTable_8021CA84_22 00000000 00000000 00000000 00000000
}

#new:Script $Script_Init_8021CC84_22 {
  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8021DB48_22 )
  Call  BindIdle      ( .Actor:Self $Script_Idle_8021CF2C_22 )
  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D404_22 )
  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021CCFC_22 )
  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
  Call SetActorVar ( .Actor:Self 3` 0` ) %For playing the intro
  Call SetActorVar ( .Actor:Self 1` 0` ) %For killing Dry Bones
  Return
  End
}

#new:Script $Script_NextTurn_8021CCFC_22 {
  Call GetActorVar ( .Actor:Self 1` *Var0 )
  If *Var0 == 1`
    Call  GetActorVar   ( .Actor:Enemy0 7` *Var0 ) %Amount of Dry Bones alive
    Sub *Var0 1`
    Call  SetActorVar   ( .Actor:Enemy0 7` *Var0 ) %Amount of Dry Bones alive
 		SetConst  *Var0  00000001
 		SetConst  *Var1  00530001
    ExecWait  DoDeath
  Else
    Call GetActorVar ( .Actor:Self 3` *Var0 )
    If *Var0 == 0`
        Call  PlaySoundAtActor  ( .Actor:Self 0000028E )
        Call  UseIdleAnimation  ( .Actor:Player .False )
        Call  EnableIdleScript  ( .Actor:Player .False )
        Call  SetAnimation      ( .Actor:Player 00000000 0001002B )
        Call  UseIdleAnimation  ( .Actor:Self .False )
        Call  EnableIdleScript  ( .Actor:Self .False )
        Call  SetAnimation      ( .Actor:Self 00000001 00350009 )
        Wait 10`
        %Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000060 00000008 00000030 0000001E 00000000 00000000 00000000 00000000 00000000 )
        Thread
            Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[5.0] )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[3.0] )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[1.0] )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[0.6] )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[0.5] )
            Call  ShakeCam  ( .Cam:Battle 00000000 00000008 *Fixed[0.3] )
            Call  UseIdleAnimation  ( .Actor:Player .True )
            Call  EnableIdleScript  ( .Actor:Player .True )
        EndThread
        Call SetActorSpeed ( .Actor:Self *Fixed[2.0] )
        Call SetActorJumpGravity ( .Actor:Self *Fixed[0.1] )
        Call GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
        Add   *Var1  50`
        Thread
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  2`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000030 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        Wait  2`
        Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
        EndThread
        Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
        Add   *Var1  40`
        Call  FlyToGoal     ( .Actor:Self  40`  0` .Easing:Linear )
        Add   *Var1  10`
        Call  FlyToGoal     ( .Actor:Self  10`  0` .Easing:Linear )
        Call  PlaySoundAtActor  ( .Actor:Self 000002D4 )
        Call  SetAnimation      ( .Actor:Self 00000001 00530009 )
        Wait  15`
        Call  PlaySoundAtActor  ( .Actor:Self 000002D3 )
        Call  SetAnimation      ( .Actor:Self 00000001 0053000A )
        Wait  20`
        Wait 4`
        Call GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
        Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
        Call  HPBarToHome   ( .Actor:Self )
        Call  UseIdleAnimation  ( .Actor:Self .True )
        Call  EnableIdleScript  ( .Actor:Self .True )
        Call SetActorVar (.Actor:Self 3` 1`)
    EndIf
    Call  GetOriginalActorType  ( .Actor:Self *VarA )
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  0
    Call  GetOwnerTarget        ( *Var0 *Var1 )
    Call  GetOriginalActorType  ( *Var0 *Var2 )
    If  *Var2  !=  *VarA
    	Call  GetActorHP    ( *Var0 *Var3 )
    	If  *Var3  !=  00000000
    		Return
    	EndIf
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var0 )
    If  *Var0  !=  FFFFFFFF
    	Goto  0
    EndIf
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  1
    Call  GetOwnerTarget        ( *Var0 *Var1 )
    Call  GetActorVar   ( *Var0 00000008 *Var3 )
    If  *Var3  !=  00000001
    	Return
    EndIf
    Call  ChooseNextTarget  ( .Iter:Next *Var0 )
    If  *Var0  !=  FFFFFFFF
    	Goto  1
    EndIf
    Call  EnemyCreateTargetList ( 00008002 )
    Call  InitTargetIterator ( )
    Label  2
    Call  GetOwnerTarget    ( *Var0 *Var1 )
    Call  SetActorFlagBits  ( *Var0 00600000 .True )
    Call  ChooseNextTarget  ( .Iter:Next *Var0 )
    If  *Var0  !=  FFFFFFFF
    	Goto  2
    EndIf
  EndIf
  Return
  End
}

#new:Script $Script_Idle_8021CF2C_22 {
  Label  0
    Call  GetActorVar       ( .Actor:Self 00000008 *Var0 )
    Call  GetStatusFlags    ( .Actor:Self *Var1 )
    Switch  *Var0
      Case  ==  00000000
        Switch  *Var1
          Case  &  ~Flags:StatusFlags:Sleep % 1000
            Call  SetTargetOffset   ( .Actor:Self 00000001  -6`  24` )
            Call  8027D4C8  ( FFFFFF81 00000001 00000001 FFFFFFFB )
          Default
            Call  SetTargetOffset   ( .Actor:Self 00000001  -8`  30` )
            Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
        EndSwitch
      Case  ==  00000001
        Switch  *Var1
          Case  &  ~Flags:StatusFlags:Sleep % 1000
            Call  SetTargetOffset   ( .Actor:Self 00000001  -1`  10` )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
          Default
            Call  SetTargetOffset   ( .Actor:Self 00000001  -1`  10` )
            Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
        EndSwitch
    EndSwitch
    Wait  1`
  Goto  0
  Return
  End
}

#new:Script $Script_8021D0E8_22 {
  Call  PlaySoundAtActor  ( .Actor:Self 000002D2 )
  Call  SetAnimation      ( .Actor:Self 00000001 00530008 )
  Wait  20`
  Call  SetActorVar       ( .Actor:Self 00000008 00000001 )
  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CA6C_22 )
  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021CAA0_22 )
  Call  SetStatusTable    ( .Actor:Self $StatusTable_8021CB68_22 )
  Call  ClearStatusEffects    ( .Actor:Self )
  Call  SetTargetOffset   ( .Actor:Self 00000001  -1`  10` )
  Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  Call  RandInt   ( 00000000 *Var0 )
  Add   *Var0  00000002
  Call  SetActorVar       ( .Actor:Self 00000000 *Var0 )
  Call  GetOriginalActorType  ( .Actor:Self *VarA )
  Call  EnemyCreateTargetList ( 00008002 )
  Call  InitTargetIterator ( )
  Label  0
  Call  GetOwnerTarget    ( *Var0 *Var1 )
  Call  GetOriginalActorType  ( *Var0 *Var2 )
  If  *Var2  !=  *VarA
    Return
  EndIf
  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  If  *Var0  !=  FFFFFFFF
    Goto  0
  EndIf
  Call  EnemyCreateTargetList ( 00008002 )
  Call  InitTargetIterator ( )
  Label  1
  Call  GetOwnerTarget        ( *Var0 *Var1 )
  Call  GetActorVar   ( *Var0 00000008 *Var3 )
  If  *Var3  !=  00000001
    Return
  EndIf
  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  If  *Var0  !=  FFFFFFFF
  	Goto  1
  EndIf
  Call  EnemyCreateTargetList ( 00008002 )
  Call  InitTargetIterator ( )
  Label  2
  Call  GetOwnerTarget    ( *Var0 *Var1 )
  Call  SetActorFlagBits  ( *Var0 00600000 .True )
  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  If  *Var0  !=  FFFFFFFF
  	Goto  2
  EndIf
  Return
  End
}

#new:Script $Script_HandleEvent_8021D404_22 {
  Call  UseIdleAnimation  ( .Actor:Self .False )
  Call  EnableIdleScript  ( .Actor:Self .False )
  Call  GetLastEvent      ( .Actor:Self *Var0 )
  Switch  *Var0
   	Case  ==  .Event:HitCombo % 9
   		SetConst  *Var0  00000001
   		SetConst  *Var1  00530007
   		ExecWait  DoNormalHit
   	Case  ==  .Event:Hit % A
   		SetConst  *Var0  00000001
   		SetConst  *Var1  00530007
  		ExecWait  DoNormalHit
   	Case  ==  .Event:BurnHit % E
   		Call  SetPartEventBits  ( .Actor:Self 00000001 00000200 .True )
   		SetConst  *Var0  00000001
   		SetConst  *Var1  0053000B
  		SetConst  *Var2  0053000C
  		ExecWait  DoBurnHit
  		Call  SetPartEventBits  ( .Actor:Self 00000001 00000200 .False )
  	Case  ==  .Event:BurnDeath % 24
  		SetConst  *Var0  00000001
  		SetConst  *Var1  0053000B
  		SetConst  *Var2  0053000C
  		ExecWait  DoBurnHit
  		SetConst  *Var0  00000001
  		SetConst  *Var1  0053000C
      Call  GetActorVar   ( .Actor:Enemy0 7` *VarC ) % Amount of Dry Bones alive
      Sub *VarC 1`
      Call  SetActorVar   ( .Actor:Enemy0 7` *VarC ) % Amount of Dry Bones alive
		  ExecWait  DoDeath
 		  Return
    Case  ==  .Event:SpinSmashHit % B
  		SetConst  *Var0  00000001
  		SetConst  *Var1  00530007
  		ExecWait  DoSpinSmashHit
  	Case  ==  .Event:SpinSmashDeath % 21
  		SetConst  *Var0  00000001
  		SetConst  *Var1  00530007
  		ExecWait  DoSpinSmashHit
  		ExecWait  $Script_8021D0E8_22
  	CaseOR  ==  00000017 % 17
  	CaseOR  ==  .Event:Immune % 19
  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  		If  *Var0  ==  00000000
  			SetConst  *Var0  00000001
  			SetConst  *Var1  00530002
  			ExecWait  DoImmune
  		Else
  			SetConst  *Var0  00000001
  			SetConst  *Var1  00530001
  			ExecWait  DoImmune
  		EndIf
  	EndCaseGroup
  	Case  ==  .Event:Death % 20
  		SetConst  *Var0  00000001
  		SetConst  *Var1  00530007
  		ExecWait  DoNormalHit
  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  		If  *Var0  ==  00000000
  			Wait  10`
  			ExecWait  $Script_8021D0E8_22
  		EndIf
  	Case  ==  .Event:RecoverStatus % 31
  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  		If  *Var0  ==  00000000
  			SetConst  *Var0  00000001
  			SetConst  *Var1  00530002
  			ExecWait  DoRecover
  		EndIf
  	Case  ==  .Event:ScareAway % 39
  		SetConst  *Var0  00000001
  		SetConst  *Var1  00530004
  		SetConst  *Var2  00530007
  		ExecWait  DoScareAway
  		Return
  	Case  ==  .Event:BeginAirLift % 3A
  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  		If  *Var0  ==  00000000
  			SetConst  *Var0  00000001
  			SetConst  *Var1  00530004
  			ExecWait  DoAirLift
 		 Else
  			SetConst  *Var0  00000001
  			SetConst  *Var1  00530009
  			ExecWait  DoAirLift
  		EndIf
  	Case  ==  .Event:BlowAway % 16
  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  		If  *Var0  ==  00000000
  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  			If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  				If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  					Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF FFFFFFFE 00000000 )
  				Else
  					Call  SetActorDispOffset    ( .Actor:Self FFFFFFFD FFFFFFFB 00000000 )
  				EndIf
  			EndIf
  			SetConst  *Var0  00000001
  			SetConst  *Var1  00530007
  			ExecWait  DoBlowAway
  		Else
  			SetConst  *Var0  00000001
  			SetConst  *Var1  00530009
  			ExecWait  DoBlowAway
  		EndIf
  		Return
  	Case  ==  .Event:AirLiftFailed % 1F
  		Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  		If  *Var0  ==  00000000
  			SetConst  *Var0  00000001
  			SetConst  *Var1  00530002
  			ExecWait  DoImmune
  		Else
  			SetConst  *Var0  00000001
  			SetConst  *Var1  00530001
  			ExecWait  DoImmune
  		EndIf
  	Default
  EndSwitch
  Call  EnableIdleScript  ( .Actor:Self .True )
  Call  UseIdleAnimation  ( .Actor:Self .True )
  Return
  End
}

#new:Script $Script_8021DAC4_22 {
  Set   *Var0  00000000
  Label  0
    Call  SetPartRotation   ( .Actor:Self 00000002 00000000 00000000 *Var0 )
    Add   *Var0  0000003C
    Mod   *Var0  00000168
    Wait  1`
  Goto  0
  Return
  End
}

#new:Script $Script_TakeTurn_8021DB48_22 {
  Call  UseIdleAnimation  ( .Actor:Self .False )
  Call  EnableIdleScript  ( .Actor:Self .False )
  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  Call  GetBattlePhase    ( *Var0 )
  If  *Var0  ==  00000001
  	Call  UseBattleCamPreset    ( 00000002 )
  	Call  MoveBattleCamOver     (  1` )
  EndIf
  Call  GetBattlePhase    ( *Var0 )
  If  *Var0  ==  00000001
  	Call  SetAnimation  ( .Actor:Self 00000001 00530006 )
  	Goto  64
  EndIf
  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
  If  *Var0  ==  00000001
   	Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
    Sub   *Var0  00000001
  	If  *Var0  ==  00000000
    	Call  PlaySoundAtActor  ( .Actor:Self 000002D4 )
  		Call  SetAnimation      ( .Actor:Self 00000001 00530009 )
   		Wait  10`
   		Call  PlaySoundAtActor  ( .Actor:Self 000002D3 )
   		Call  SetAnimation      ( .Actor:Self 00000001 0053000A )
   		Wait  20`
   		Call  SetActorVar       ( .Actor:Self 00000008 00000000 )
   		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
   		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021CA20_22 )
   		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8021CA84_22 )
   		Call  SetStatusTable    ( .Actor:Self $StatusTable_8021CABC_22 )
   		Call  SetPartFlagBits   ( .Actor:Self 00000001 00002000 .False )
   		Call  SetTargetOffset   ( .Actor:Self 00000001  -8`  30` )
   		Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
   		Call  GetEnemyMaxHP     ( .Actor:Self *Var0 )
   		Call  SetEnemyHP        ( .Actor:Self *Var0 )
    Else
  		Call  PlaySoundAtActor  ( .Actor:Self 000002D4 )
  		Call  SetAnimation      ( .Actor:Self 00000001 00530009 )
   		Wait  10`
   		Call  SetActorVar       ( .Actor:Self 00000000 *Var0 )
   	EndIf
   	Call  EnableIdleScript  ( .Actor:Self .True )
   	Call  UseIdleAnimation  ( .Actor:Self .True )
   	Return
  EndIf
  Call  SetAnimation  ( .Actor:Self 00000001 00530005 )
  Wait  15`
  Call  SetAnimation  ( .Actor:Self 00000001 00530006 )
  Thread
    Wait  8`
  	Call  SetAnimation  ( .Actor:Self 00000001 00530002 )
  EndThread
  Label  64
  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   	Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  Else
    Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  EndIf
  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  Switch  *Var0
   	CaseOR  ==  .HitResult:Miss % 6
   	CaseOR  ==  .HitResult:Lucky % 5
   		Set   *VarF  *Var0
   		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   		Add   *Var1  00000014
   		Call  SetPartPos        ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
   		Wait  1`
   		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
   		Call  PlaySoundAtPart   ( .Actor:Self 00000002 000002D1 )
   		Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Walk 00000000 00000000 )
   		Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
   		Exec  $Script_8021DAC4_22 *VarA
   		Call  SetGoalToTarget   ( .Actor:Self )
   		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   		Sub   *Var0  00000064
   		Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[12.0] )
   		Call  RunPartTo ( .Actor:Self 00000002 *Var0 *Var1 *Var2 .False )
   		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
   		Kill  *VarA
   		If  *VarF  ==  00000005
   			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  		EndIf
   		Wait  15`
   		Call  YieldTurn ( )
   		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
   		Wait  20`
   		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
   		Call  EnableIdleScript      ( .Actor:Self .True )
   		Call  UseIdleAnimation      ( .Actor:Self .True )
   		Return
    EndCaseGroup
  EndSwitch
  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  Add   *Var1  00000014
  Call  SetPartPos        ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  Wait  1`
  Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  Call  PlaySoundAtPart   ( .Actor:Self 00000002 000002D1 )
  Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Walk 00000000 00000000 )
  Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
  Exec  $Script_8021DAC4_22 *VarA
  Call  SetGoalToTarget   ( .Actor:Self )
  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[12.0] )
  Call  RunPartTo ( .Actor:Self 00000002 *Var0 *Var1 *Var2 .False )
  Wait  2`
  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000004 00000020 )
  Switch  *Var0
   	CaseOR  ==  .HitResult:Hit % 0
   	CaseOR  ==  .HitResult:QuakeImmune % 2
   		Call  GetPartOffset     ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  		Sub   *Var0  00000064
  		Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
  		Call  JumpPartTo        ( .Actor:Self 00000002 *Var0  0` *Var2  30` .True )
  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  		Kill  *VarA
  	  Call  YieldTurn ( )
    EndCaseGroup
  EndSwitch
  Call  EnableIdleScript  ( .Actor:Self .True )
  Call  UseIdleAnimation  ( .Actor:Self .True )
  Return
  End
}
